{"version":3,"sources":["reportWebVitals.js","globalSettings.js","NavBar/NavBar.js","MainPage.js","GeneralizedTable.js","AddNewItemDropdown.js","RawMaterial/IzejvielasBlock.js","FixedCost/FixedCostBlock.js","Package/PackageBlock.js","Workers/WorkersBlock.js","Electricity/ElectricityBlock.js","Deposit/DepositBlock.js","AlcoholTax/AlcoholTaxBlock.js","ProductPage.js","GroupPage.js","AddNewItemButton.js","RawMaterial/RawMaterialAllPage.js","RawMaterial/RawMaterialAddPage.js","FixedCost/FixedCostAllAddPage.js","FixedCost/FixedCostAllPage.js","AddExpensesPage.js","Package/PackageAllPage.js","Package/PackageAddPage.js","Workers/WorkersAddPage.js","Workers/WorkersAllPage.js","Electricity/Electricity.js","Workers/RazGrupasAddPage.js","AlcoholTax/AlcoholTax.js","WarningDelete.js","FileСhoice.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","globalSettings","floatPrecision","floatPrecisionSecondary","floatPrecisionThird","ipcRenderer","window","require","lodash","NavBar","history","useHistory","handleClick","path","e","location","pathname","push","Navbar","bg","variant","sticky","Container","Brand","onClick","Toggle","Nav","className","NavDropdown","id","title","menuVariant","Item","Link","goBack","Button","data","JSON","parse","sendSync","productObjects","chain","get","value","izejvielasAll","pudeles","forEach","product","izejvielas","fiksetie","udens_sagatavosana","iepakojums","razosanas_grupas","elektriba","deposit","summa","iepakSumma","item","razGrupa","summa_without_package","toFixed","pudele_izejviela","find","nosaukums","undefined","objAdd","izejvielasObj","newKopuma","assign","parseFloat","alcohol_tax","stringify","ProductTable","groups","products","groupItems","group","productList","filter","x","grupa","GroupEntry","groupName","Table","striped","bordered","hover","size","props","colSpan","Products","itemList","componentList","ProductEntry","kods","cena","MainPage","GeneralizedTable","TableHeader","headerNames","this","tableBody","React","Component","headerList","toString","AddNewItemDropdown","type","to","from","send","IzejvielasTableBody","normaSumma","IzejvielaProductTableEntry","productName","useState","setCena","cenaValidated","setCenaValidated","daudzums","setDaudzums","daudzumsValidated","setDaudzumsValidated","kopuma","mervieniba","Cena","validated","handleChange","event","target","handleValidation","fileName","currentTarget","checkValidity","preventDefault","stopPropagation","cenaHandleValidation","Daudzums","newDaudzums","daudzumsHandleValidation","DeleteIzejvielaEntryButton","izejvielaName","Row","Col","Form","noValidate","Group","Control","required","placeholder","onChange","onBlur","style","width","height","Feedback","on","arg","remove","IzejvielasBlock","FixedCostTableBody","productObj","electricityGeneral","electricityObj","FixedCostBlock","PackageSize","fluid","as","md","Label","vienDaudzums","vienDaudzumsHandleChange","vienDaudzumsHandleValidation","PackageTableBody","expenses","summaIepak","summaVien","PackageProductTableEntry","key","norma","setNorma","normaValidated","setNormaValidated","setSummaIepak","setSummaVien","newSummaIepak","newSummaVien","console","log","summa_iepak","summa_vien","Norma","normaHandleValidation","DeletePackageEntryButton","packageName","PackageBlock","vienDaudzumsTemp","setVienDaudzums","vienDaudzumsValidated","setVienDaudzumsValidated","newVienDaudzums","packageObj","elementi","ProductionGroupBlock","Amount","razGrupaObj","darbinieki","WorkersTableBody","razGrupNosaukums","DeleteRazGrupasButton","workers","WorkersTableEntry","alga","alga_nodoklis","darbinieksObj","newSumma","DeleteWorkersEntryButton","AddNewRazGrupaDropdown","dropDownButton","info","handleCreateNew","handleGeneral","raz_grupas_nosaukums","WorkersBlock","razosanasGrupas","ElectricityTableBody","ElectricityBlock","DepositTableBody","obj","DepositBlock","alcohol","setAlcohol","alcoholValidated","setAlcoholValidated","volume","setVolume","volumeValidated","setVolumeValidated","AlcoholTaxBlock","CenaBezIepak","productObject","ProductPage","useParams","parseInt","NavigationBar","GroupPage","AddNewItemButton","message","buttonFormatter","cell","row","rowIndex","DeleteRawButton","cellEdit","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","newValue","column","newCena","groupObjects","NewTable","SearchBar","Search","columns","dataField","text","editable","sort","headerAlign","headerStyle","validator","isNaN","valid","formatter","keyField","search","searchProps","srText","baseProps","bootstrap4","condensed","RawMaterialAllPage","RawMaterialAddPage","state","showAlert","alertMessage","handleKodsChange","bind","handleNameChange","handleMervienibaChange","handlePriceChange","setShowAlert","setAlertMessage","setState","InputAlert","onClose","Alert","dismissible","isNumeric","str","InputForm","handleSubmit","element","paramObj","tempData","controlId","Select","FixedCostAllAddPage","TableBody","fixedGeneral","productUpdate","Elements","list","Element","setSumma","summaValidated","setSummaValidated","fixedElementi","total","vien_summa","fixedObj","FixedCostAllPage","destinationEntryName","AddExpensesPagePageClass","entryName","AddAlert","ExpenseTable","TableTitle","IzejvielaTable","ExpenseTableBody","formatExtraData","AddExpenseButton","Error","component","IzejvielaEntry","FixedEntry","PackageEntry","WorkersEntry","RazGrupasEntry","cloneElement","ObjAdd","array","addExpenseToFile","AddExpensesPage","destinationEntryNameTemp","infoTemp","setValidated","iepakObj","PackageAllPage","PackageAddPage","WorkersAddPage","handleAlgaChange","nodoklis","alga_procents","Nodoklis","setNodoklis","nodoklisValidated","setNodoklisValidated","razGroup","darbinieks","Alga","DeleteButton","setAlga","WorkersAllPage","elektribaObj","izlietota","setIzlietota","izlietotaValidated","setIzlietotaValidated","vienSumma","setVienSumma","vienSummaValidated","setVienSummaValidated","Electricity","RazGrupasAddClass","RazGrupasAddPage","alcoholTax","setAlcoholTax","alcoholTaxValidated","setAlcoholTaxValidated","AlcoholTax","WarningDelete","FileСhoice","filePath","setFilePath","ScrollToTop","useLocation","useEffect","scrollTo","NoMatch","ProductRouting","exact","RawMaterialRouting","GroupRouting","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85647f1f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const globalSettings = {\r\n  floatPrecision: 4, // Number of digits after comma\r\n  floatPrecisionSecondary: 5, // Number of digits after comma\r\n  floatPrecisionThird: 6, // Number of digits after comma\r\n};\r\n\r\nexport default globalSettings;\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport globalSettings from \"./../globalSettings\"\r\n\r\nimport {\r\n    useHistory\r\n} from \"react-router-dom\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require('lodash');\r\n\r\nfunction NavBar() {\r\n    let history = useHistory();\r\n\r\n    function handleClick(path, e) {\r\n        // Only push to the location which is different from the current one\r\n        if (path !== history.location.pathname) {\r\n            history.push(path);\r\n        }\r\n    }\r\n\r\n    function goBack() {\r\n        history.goBack();\r\n    }\r\n\r\n    function primeCalculate() {\r\n        // Get all data\r\n        let data = JSON.parse(ipcRenderer.sendSync('get-data'));\r\n        \r\n        // Get all products\r\n        let productObjects = lodash\r\n            .chain(data)\r\n            .get(\"produkti\")\r\n            .value()\r\n\r\n        let izejvielasAll = data[\"izejvielas\"]\r\n        let pudeles = []\r\n\r\n        // Calculate for bottles first\r\n        productObjects.forEach(product => {\r\n            if (product[\"grupa\"] === \"Bottles\") {\r\n                let izejvielas = product[\"izejvielas\"]\r\n                let fiksetie = product[\"fiksētie\"]\r\n                let udens_sagatavosana = product[\"udens_sagatavosana\"]\r\n                let iepakojums = product[\"iepakojums\"][\"elementi\"]\r\n                let razosanas_grupas = product[\"ražošanas_grupas\"]\r\n                let elektriba = product[\"elektriba\"]\r\n                let deposit = product[\"deposit\"]\r\n\r\n                let summa = 0\r\n                let iepakSumma = 0\r\n\r\n                // Calculate for izejvielas\r\n                izejvielas.forEach(item => {\r\n                    summa += item[\"kopuma\"]\r\n                })\r\n                // Calculate for udens_sagatavosana\r\n                udens_sagatavosana.forEach(item => {\r\n                    summa += item[\"cena\"]\r\n                })\r\n                // Calculate for iepakojums\r\n                iepakojums.forEach(item => {\r\n                    summa += item[\"summa_vien\"]\r\n                    iepakSumma += item[\"summa_vien\"]\r\n                })\r\n                // Calculate for salary\r\n                razosanas_grupas.forEach(razGrupa => {\r\n                    razGrupa[\"darbinieki\"].forEach(item => {\r\n                        summa += item[\"summa_vien\"]\r\n                    })\r\n                })\r\n                // Calculate for elektriba\r\n                summa += elektriba[\"summa\"]\r\n                // Calculate for fiksetie\r\n                summa += fiksetie[\"summa\"]\r\n                // Calculate for deposit\r\n                summa += deposit\r\n\r\n                let summa_without_package = summa - deposit - iepakSumma\r\n\r\n                // Update the pudele's prime price\r\n                product[\"cena\"] = summa.toFixed(globalSettings[\"floatPrecisionThird\"])\r\n                product[\"cena(bez iepak.)\"] = summa_without_package.toFixed(globalSettings[\"floatPrecisionThird\"])\r\n\r\n                //  If the product is bottle, put into the list\r\n                pudeles.push(product)\r\n            }\r\n        })\r\n\r\n        // Update the list of bottles in the raw material list\r\n        productObjects.forEach(product => {\r\n            if (product[\"grupa\"] === \"Bottles\") {\r\n                let pudele_izejviela = lodash\r\n                    .chain(izejvielasAll)\r\n                    .find({nosaukums : product.nosaukums})\r\n                    .value()\r\n\r\n                if (pudele_izejviela === undefined) {\r\n                    // Create the entry if not in the list\r\n                    let objAdd = {\r\n                        \"kods\": \"pudele\",\r\n                        \"nosaukums\": product.nosaukums,\r\n                        \"mervieniba\": \"gab\",\r\n                        \"cena\": product[\"cena(bez iepak.)\"]\r\n                    }\r\n\r\n                    izejvielasAll.push(objAdd) // Add new object \r\n                } else {\r\n                    // Just change the price if already in the list\r\n                    pudele_izejviela[\"cena\"] = product[\"cena(bez iepak.)\"]\r\n                }\r\n\r\n                // Update the values in each product and group\r\n                productObjects.forEach(item => {\r\n                    // Get object\r\n                    let izejvielasObj = lodash\r\n                            .chain(item)\r\n                            .get(\"izejvielas\")\r\n                            .find({nosaukums: product.nosaukums})\r\n                            .value()\r\n                    // If object exists\r\n                    if (izejvielasObj !== undefined) {\r\n                        let newKopuma = product[\"cena(bez iepak.)\"] * izejvielasObj[\"daudzums\"]\r\n\r\n                        lodash\r\n                            .chain(izejvielasObj)\r\n                            .assign({\"cena\" : product[\"cena(bez iepak.)\"]})\r\n                            .assign({\"kopuma\" : parseFloat(newKopuma)})\r\n                            .value()\r\n                    }\r\n\r\n                })\r\n        \r\n            }\r\n        })\r\n        \r\n        // Update the prime price again, using updated bottle prices\r\n        productObjects.forEach(product => {\r\n            let izejvielas = product[\"izejvielas\"]\r\n            let fiksetie = product[\"fiksētie\"]\r\n            let udens_sagatavosana = product[\"udens_sagatavosana\"]\r\n            let iepakojums = product[\"iepakojums\"][\"elementi\"]\r\n            let razosanas_grupas = product[\"ražošanas_grupas\"]\r\n            let elektriba = product[\"elektriba\"]\r\n            let deposit = product[\"deposit\"]\r\n            let alcohol_tax = product[\"alcohol_tax\"]\r\n\r\n            let summa = 0\r\n\r\n            // Calculate for izejvielas\r\n            izejvielas.forEach(item => {\r\n                summa += item[\"kopuma\"]\r\n            })\r\n\r\n            // Calculate for udens_sagatavosana\r\n            udens_sagatavosana.forEach(item => {\r\n                summa += item[\"cena\"]\r\n            })\r\n            // Calculate for iepakojums\r\n            iepakojums.forEach(item => {\r\n                summa += item[\"summa_vien\"]\r\n            })\r\n            // Calculate for iepakojums\r\n            razosanas_grupas.forEach(razGrupa => {\r\n                razGrupa[\"darbinieki\"].forEach(item => {\r\n                    summa += item[\"summa_vien\"]\r\n                })\r\n            })\r\n\r\n            // Calculate for elektriba\r\n            summa += elektriba[\"summa\"]\r\n            // Calculate for fiksetie\r\n            summa += fiksetie[\"summa\"]\r\n            // Calculate for deposit\r\n            summa += deposit\r\n            // Calculate for alcohol tax\r\n            if (alcohol_tax != null) summa += alcohol_tax[\"summa\"]\r\n\r\n            // Update the product's prime price\r\n            product[\"cena\"] = summa\r\n        })\r\n\r\n        // Update the database\r\n        ipcRenderer.sendSync('modify-data', [ JSON.stringify(data) ])\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n            <Container>\r\n                <Navbar.Brand onClick={() => handleClick(\"/\")}>Main page</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Nav className=\"me-auto\">\r\n                        <NavDropdown\r\n                            id=\"nav-dropdown-dark-example\"\r\n                            title=\"General\"\r\n                            menuVariant=\"dark\" \r\n                            >\r\n                            <NavDropdown.Item onClick={() => handleClick(\"/raw-material-all\")}>Raw Material</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={() => handleClick(\"/package-all\")}>Package</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={() => handleClick(\"/workers-all\")}>Workers list</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={() => handleClick(\"/electricity\")}>Electricity price</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={() => handleClick(\"/fixed-cost-all\")}>Fixed costs</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={() => handleClick(\"/alcohol-tax\")}>Excise tax</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                    <Nav>\r\n                        <Nav.Link onClick={() => goBack()}>go back</Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Button variant=\"outline-success\" onClick={primeCalculate}>Calculate prime price</Button>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n  }\r\n\r\n  export default NavBar;","import React from 'react';\r\n// import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from 'react-bootstrap/Table';\r\nimport NavBar from \"./NavBar/NavBar\"\r\n\r\nimport globalSettings from \"./globalSettings\"\r\n\r\nimport {\r\n    useHistory\r\n} from \"react-router-dom\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\n// const lodash = require('lodash');\r\n\r\nfunction MainPage() {\r\n  return (\r\n    <>\r\n        <NavBar/>\r\n        <ProductTable/>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ProductTable() {\r\n    // Get raw material data from main process\r\n    let data = JSON.parse(ipcRenderer.sendSync('get-data'));\r\n\r\n    let groups = data[\"grupas\"];\r\n    let products = data[\"produkti\"];\r\n\r\n    let groupItems = [];\r\n    groups.forEach((group) => {\r\n        // Get all products of the group\r\n        let productList = products.filter(x => x.grupa === group.nosaukums)\r\n\r\n        groupItems.push(\r\n            <GroupEntry groupName={group.nosaukums} productList={productList} key={group.nosaukums} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Table striped bordered hover size=\"sm\">\r\n            <thead>\r\n            <tr>\r\n                <th>Code</th>\r\n                <th>Name</th>\r\n                <th>Euro/unit</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                {groupItems}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nfunction GroupEntry(props) {\r\n    // let history = useHistory();\r\n\r\n    // function handleClick() {\r\n    //     history.push(\"/group-\" + props.groupName);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <tr className=\"table-secondary\">\r\n                <td colSpan=\"3\" /* onClick={handleClick} */ >{props.groupName}</td>\r\n            </tr> \r\n            <Products productList={props.productList}/>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Products(props) {\r\n    let itemList = props.productList\r\n    let componentList = [];\r\n    // Make the list of components\r\n    itemList.forEach((item) => {\r\n        componentList.push(<ProductEntry key={item.nosaukums} item={item} />)\r\n    })\r\n    return componentList;\r\n}\r\n\r\nfunction ProductEntry(props) {\r\n    let history = useHistory();\r\n\r\n    function handleClick() {\r\n        history.push(\"/product-\" + props.item.kods);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{props.item.kods}</td>\r\n            <td className=\"product-cell\" onClick={handleClick}>{props.item.nosaukums}</td>\r\n            <td>{parseFloat(props.item.cena).toFixed(globalSettings[\"floatPrecision\"])}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass GeneralizedTable extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props)\r\n    // }\r\n  \r\n\trender() {\r\n\t\treturn (\r\n            <>\r\n               <Table striped bordered hover size=\"sm\"> \r\n                    <TableHeader headerNames={this.props.headerNames}/>\r\n                    {this.props.tableBody}\r\n                </Table>\r\n            </>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction TableHeader(props) {\r\n    let headerList = []\r\n    props.headerNames.forEach(item => {\r\n        headerList.push(\r\n            <th key={item.toString()}>{item}</th>\r\n        )\r\n    })\r\n    \r\n    return (\r\n        <thead className=\"text-center\">\r\n            <tr>\r\n                {headerList}\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nexport default GeneralizedTable","import Button from \"react-bootstrap/Button\";\r\nconst { ipcRenderer } = window.require(\"electron\");\r\n\r\nfunction AddNewItemDropdown(props) {\r\n  function handleGeneral(event, type) {\r\n    ipcRenderer.send(\"expenses-add-window\", [\r\n      props.nosaukums,\r\n      JSON.stringify(type),\r\n    ]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"addEntryButtons\">\r\n      <Button\r\n        variant=\"secondary\"\r\n        size=\"sm\"\r\n        onClick={(e) =>\r\n          handleGeneral(e, { to: \"produkti\", from: props.from, type: \"all\" })\r\n        }\r\n      >\r\n        Add new item\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNewItemDropdown;\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport globalSettings from \"../globalSettings\";\r\nimport GeneralizedTable from \"../GeneralizedTable\";\r\nimport AddNewItemDropdown from \"../AddNewItemDropdown\";\r\n\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction IzejvielasBlock(props) {\r\n  const headerNames = [\r\n    \"Code\",\r\n    \"Name\",\r\n    \"Measure\",\r\n    \"Price\",\r\n    \"Amount\",\r\n    \"Sum/package\",\r\n    \"Remove\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-center\">Raw materials</h3>\r\n      <GeneralizedTable\r\n        headerNames={headerNames}\r\n        tableBody={<IzejvielasTableBody {...props} />}\r\n      />\r\n      <AddNewItemDropdown\r\n        nosaukums={props.nosaukums}\r\n        type={props.type}\r\n        from={\"izejvielas\"}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction IzejvielasTableBody(props) {\r\n  // Get raw material data from main process\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n  let izejvielas = lodash\r\n    .chain(data)\r\n    .get(props.type)\r\n    .find({ nosaukums: props.nosaukums })\r\n    .get(\"izejvielas\")\r\n    .value();\r\n\r\n  let componentList = [];\r\n  let summa = 0.0;\r\n  let normaSumma = 0.0;\r\n\r\n  // Make the list of components\r\n  izejvielas.forEach((item) => {\r\n    componentList.push(\r\n      <IzejvielaProductTableEntry\r\n        key={item.nosaukums}\r\n        item={item}\r\n        productName={props.nosaukums}\r\n        {...props}\r\n      />\r\n    );\r\n    summa += item[\"kopuma\"];\r\n    if (item[\"mervieniba\"] !== \"gab\") {\r\n      normaSumma += item[\"daudzums\"];\r\n    }\r\n  });\r\n\r\n  return (\r\n    <tbody>\r\n      {componentList}\r\n      <tr>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td className=\"text-end fw-bold\">Sum:</td>\r\n        <td>{parseFloat(normaSumma).toFixed(2) + \" (kg, l)\"}</td>\r\n        <td>\r\n          {parseFloat(summa).toFixed(globalSettings[\"floatPrecisionSecondary\"])}\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n}\r\n\r\nfunction IzejvielaProductTableEntry(props) {\r\n  const [cena, setCena] = useState(parseFloat(props.item.cena));\r\n  const [cenaValidated, setCenaValidated] = useState(false);\r\n\r\n  const [daudzums, setDaudzums] = useState(parseFloat(props.item.daudzums));\r\n  const [daudzumsValidated, setDaudzumsValidated] = useState(false);\r\n\r\n  let kopuma = parseFloat(props.item.kopuma);\r\n\r\n  function cenaHandleValidation(fileName, event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setCenaValidated(true);\r\n    } else {\r\n      setCenaValidated(false);\r\n      // Update the value\r\n      let newKopuma = daudzums * cena;\r\n\r\n      let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n      lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({ nosaukums: props.productName })\r\n        .get(\"izejvielas\")\r\n        .find({ nosaukums: props.item.nosaukums })\r\n        .assign({ cena: parseFloat(cena) })\r\n        .assign({ kopuma: parseFloat(newKopuma) })\r\n        .value();\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    }\r\n  }\r\n\r\n  function daudzumsHandleValidation(fileName, event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setDaudzumsValidated(true);\r\n    } else {\r\n      setDaudzumsValidated(false);\r\n      // Update the value\r\n      let newDaudzums = event.target.value;\r\n      let newKopuma = newDaudzums * cena;\r\n\r\n      let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n      lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({ nosaukums: props.productName })\r\n        .get(\"izejvielas\")\r\n        .find({ nosaukums: props.item.nosaukums })\r\n        .assign({ daudzums: parseFloat(newDaudzums) })\r\n        .assign({ kopuma: parseFloat(newKopuma) })\r\n        .value();\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    }\r\n  }\r\n\r\n  function cenaHandleChange(event) {\r\n    setCena(event.target.value);\r\n  }\r\n\r\n  function daudzumsHandleChange(event) {\r\n    setDaudzums(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <tr className=\"align-middle\">\r\n      <td>{props.item.kods}</td>\r\n      <td>{props.item.nosaukums}</td>\r\n      <td>{props.item.mervieniba}</td>\r\n      <td>\r\n        <Cena\r\n          validated={cenaValidated}\r\n          cena={cena}\r\n          handleChange={cenaHandleChange}\r\n          handleValidation={(e) => cenaHandleValidation(props.fileName, e)}\r\n          fileName={props.fileName}\r\n        />\r\n      </td>\r\n      <td>\r\n        <Daudzums\r\n          validated={daudzumsValidated}\r\n          daudzums={daudzums}\r\n          handleChange={daudzumsHandleChange}\r\n          handleValidation={(e) => daudzumsHandleValidation(props.fileName, e)}\r\n          fileName={props.fileName}\r\n        />\r\n      </td>\r\n      <td>\r\n        {parseFloat(kopuma).toFixed(globalSettings[\"floatPrecision\"] + 1)}\r\n      </td>\r\n      <td>\r\n        <DeleteIzejvielaEntryButton\r\n          izejvielaName={props.item.nosaukums}\r\n          productName={props.productName}\r\n          fileName={props.fileName}\r\n          {...props}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction Cena(props) {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Form noValidate validated={props.validated}>\r\n            <Form.Group>\r\n              <Form.Control\r\n                id=\"cena\"\r\n                type=\"number\"\r\n                required\r\n                placeholder=\"Цена\"\r\n                value={props.cena}\r\n                onChange={props.handleChange}\r\n                onBlur={props.handleValidation}\r\n                style={{ width: \"120px\", height: \"28px\" }}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Введите цену\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction Daudzums(props) {\r\n  return (\r\n    <Form noValidate validated={props.validated}>\r\n      <Form.Group>\r\n        <Form.Control\r\n          id=\"daudzums\"\r\n          type=\"number\"\r\n          required\r\n          placeholder=\"Кол-во\"\r\n          value={props.daudzums}\r\n          onChange={props.handleChange}\r\n          onBlur={props.handleValidation}\r\n          style={{ width: \"120px\", height: \"28px\" }}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          Введите количество\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction DeleteIzejvielaEntryButton(props) {\r\n  function handleClick() {\r\n    let izejvielaName = props.izejvielaName;\r\n\r\n    let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n    ipcRenderer.send(\"warning-delete\");\r\n    ipcRenderer.on(\"confirm-delete\", (event, arg) => {\r\n      lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({ nosaukums: props.productName })\r\n        .get(\"izejvielas\")\r\n        .remove({ nosaukums: izejvielaName })\r\n        .value();\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    });\r\n  }\r\n  return (\r\n    <Button\r\n      variant=\"danger\"\r\n      size=\"sm\"\r\n      onClick={(e) => handleClick(props.fileName, e)}\r\n    >\r\n      remove\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default IzejvielasBlock;\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport \"../App.css\";\r\n\r\nimport globalSettings from \"../globalSettings\";\r\n\r\nimport GeneralizedTable from \"../GeneralizedTable\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction FixedCostBlock(props) {\r\n  let headerNames = [\"Name\", \"Value\"];\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-center\">Fixed costs</h3>\r\n      <GeneralizedTable\r\n        headerNames={headerNames}\r\n        tableBody={<FixedCostTableBody {...props} />}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FixedCostTableBody(props) {\r\n  // Get electricity data from main process\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n  let productObj = lodash\r\n    .chain(data)\r\n    .get(props.type)\r\n    .find({ nosaukums: props.nosaukums })\r\n    .value();\r\n\r\n  let electricityGeneral = lodash.chain(data).get(\"fiksētie\").value();\r\n\r\n  let electricityObj = productObj[\"fiksētie\"];\r\n\r\n  const [daudzums, setDaudzums] = useState(electricityObj[\"vien_daudzums\"]);\r\n  const [daudzumsValidated, setDaudzumsValidated] = useState(false);\r\n\r\n  function daudzumsHandleChange(event) {\r\n    setDaudzums(event.target.value);\r\n  }\r\n\r\n  function daudzumsHandleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setDaudzumsValidated(true);\r\n    } else {\r\n      setDaudzumsValidated(false);\r\n      // Update the value\r\n      electricityObj[\"vien_daudzums\"] = parseFloat(daudzums);\r\n      electricityObj[\"summa\"] =\r\n        electricityGeneral[\"vien_summa\"] * electricityObj[\"vien_daudzums\"];\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tbody>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"col-md-3 text-end\">General price for one unit:</td>\r\n          <td className=\"col-md-6\">\r\n            {electricityGeneral[\"vien_summa\"].toFixed(\r\n              globalSettings[\"floatPrecisionSecondary\"]\r\n            )}\r\n          </td>\r\n        </tr>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"text-end\">Number of units:</td>\r\n          <td>\r\n            <Form noValidate validated={daudzumsValidated}>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  required\r\n                  placeholder=\"Кол-во\"\r\n                  value={daudzums}\r\n                  onChange={daudzumsHandleChange}\r\n                  onBlur={daudzumsHandleValidation}\r\n                  style={{ width: \"120px\", height: \"30px\" }}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Type the amount\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n          </td>\r\n        </tr>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"text-end\">Sum:</td>\r\n          <td>\r\n            {electricityObj[\"summa\"].toFixed(\r\n              globalSettings[\"floatPrecisionSecondary\"]\r\n            )}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FixedCostBlock;\r\n","import React, { useState } from \"react\";\r\n// import './App.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport globalSettings from \"../globalSettings\";\r\nimport GeneralizedTable from \"../GeneralizedTable\";\r\nimport AddNewItemDropdown from \"../AddNewItemDropdown\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nlet fileName = \"/..\";\r\n\r\nfunction PackageBlock(props) {\r\n  const headerNames = [\r\n    \"Code\",\r\n    \"Name\",\r\n    \"Measure\",\r\n    \"Price\",\r\n    \"Amount\",\r\n    \"Sum/package\",\r\n    \"Price/unit\",\r\n    \"Remove\",\r\n  ];\r\n\r\n  // Get vienibas daudzums\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n  let vienDaudzumsTemp = lodash\r\n    .chain(data)\r\n    .get(props.type)\r\n    .find({ nosaukums: props.nosaukums })\r\n    .get(\"iepakojums\")\r\n    .get(\"daudzums\")\r\n    .value();\r\n\r\n  // Get the vien daudzums\r\n  const [vienDaudzums, setVienDaudzums] = useState(\r\n    parseFloat(vienDaudzumsTemp)\r\n  );\r\n  const [vienDaudzumsValidated, setVienDaudzumsValidated] = useState(false);\r\n\r\n  function vienDaudzumsHandleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setVienDaudzumsValidated(true);\r\n    } else {\r\n      setVienDaudzumsValidated(false);\r\n      // Update the values\r\n      let newVienDaudzums = event.target.value;\r\n      let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n      let packageObj = lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({ nosaukums: props.nosaukums })\r\n        .get(\"iepakojums\")\r\n        .value();\r\n\r\n      let elementi = packageObj[\"elementi\"];\r\n\r\n      packageObj[\"daudzums\"] = parseFloat(newVienDaudzums);\r\n\r\n      // Update the summa_vien entry for each item\r\n      elementi.forEach((item) => {\r\n        item[\"summa_vien\"] = item[\"summa_iepak\"] / packageObj[\"daudzums\"];\r\n      });\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    }\r\n  }\r\n\r\n  function vienDaudzumsHandleChange(event) {\r\n    setVienDaudzums(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-center\">Package</h3>\r\n      <PackageSize\r\n        validated={vienDaudzumsValidated}\r\n        vienDaudzums={vienDaudzums}\r\n        vienDaudzumsHandleChange={vienDaudzumsHandleChange}\r\n        vienDaudzumsHandleValidation={(e) => vienDaudzumsHandleValidation(e)}\r\n        fileName={props.fileName}\r\n      />\r\n      <GeneralizedTable\r\n        headerNames={headerNames}\r\n        tableBody={<PackageTableBody vienDaudzums={vienDaudzums} {...props} />}\r\n      />\r\n      <AddNewItemDropdown\r\n        nosaukums={props.nosaukums}\r\n        type={props.type}\r\n        from={\"iepakojums\"}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction PackageSize(props) {\r\n  return (\r\n    <Container fluid>\r\n      <Form noValidate validated={props.validated}>\r\n        <Form.Group as={Row}>\r\n          <Col md=\"4\">\r\n            <div className=\"text-end\">\r\n              <Form.Label>Number of units in one package:</Form.Label>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <Form.Control\r\n              id=\"daudzums\"\r\n              type=\"number\"\r\n              required\r\n              placeholder=\"Кол-во\"\r\n              value={props.vienDaudzums}\r\n              onChange={props.vienDaudzumsHandleChange}\r\n              onBlur={props.vienDaudzumsHandleValidation}\r\n              style={{ width: \"120px\", height: \"30px\" }}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Введите количество\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction PackageTableBody(props) {\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n  let expenses = lodash\r\n    .chain(data)\r\n    .get(props.type)\r\n    .find({ nosaukums: props.nosaukums })\r\n    .get(\"iepakojums\")\r\n    .get(\"elementi\")\r\n    .value();\r\n\r\n  // let expenses = JSON.parse(data)\r\n  let componentList = [];\r\n  let summaIepak = 0;\r\n  let summaVien = 0;\r\n\r\n  // Make the list of components\r\n  expenses.forEach((item) => {\r\n    componentList.push(\r\n      <PackageProductTableEntry\r\n        {...props}\r\n        key={item.nosaukums}\r\n        item={item}\r\n        productName={props.nosaukums}\r\n        fileName={fileName}\r\n      />\r\n    );\r\n\r\n    summaIepak += item[\"summa_iepak\"];\r\n    summaVien += item[\"summa_vien\"];\r\n  });\r\n\r\n  return (\r\n    <tbody>\r\n      {componentList}\r\n      <tr>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td className=\"text-end fw-bold\">Sum:</td>\r\n        <td>{summaIepak.toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n        <td>{summaVien.toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n}\r\n\r\nfunction PackageProductTableEntry(props) {\r\n  const [cena, setCena] = useState(parseFloat(props.item.cena));\r\n  const [cenaValidated, setCenaValidated] = useState(false);\r\n\r\n  const [norma, setNorma] = useState(parseFloat(props.item.norma));\r\n  const [normaValidated, setNormaValidated] = useState(false);\r\n\r\n  const [summaIepak, setSummaIepak] = useState(parseFloat(norma * cena));\r\n  const [summaVien, setSummaVien] = useState(summaIepak / props.vienDaudzums);\r\n\r\n  function cenaHandleValidation(fileName, event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setCenaValidated(true);\r\n    } else {\r\n      setCenaValidated(false);\r\n\r\n      let newSummaIepak = norma * cena;\r\n      let newSummaVien = newSummaIepak / props.vienDaudzums;\r\n      // Update the value\r\n      setSummaIepak(newSummaIepak);\r\n      setSummaVien(newSummaVien);\r\n\r\n      console.log(cena);\r\n      console.log(norma);\r\n      console.log(newSummaIepak);\r\n      console.log(newSummaVien);\r\n\r\n      let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n      lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({ nosaukums: props.productName })\r\n        .get(\"iepakojums\")\r\n        .get(\"elementi\")\r\n        .find({ nosaukums: props.item.nosaukums })\r\n        .assign({ summa_iepak: parseFloat(newSummaIepak) })\r\n        .assign({ summa_vien: parseFloat(newSummaVien) })\r\n        .assign({ cena: parseFloat(cena) })\r\n        .value();\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    }\r\n  }\r\n\r\n  function normaHandleValidation(fileName, event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setNormaValidated(true);\r\n    } else {\r\n      setNormaValidated(false);\r\n      // Update the value\r\n      let newSummaIepak = norma * cena;\r\n      let newSummaVien = newSummaIepak / props.vienDaudzums;\r\n\r\n      let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n      lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({ nosaukums: props.productName })\r\n        .get(\"iepakojums\")\r\n        .get(\"elementi\")\r\n        .find({ nosaukums: props.item.nosaukums })\r\n        .assign({ summa_iepak: parseFloat(newSummaIepak) })\r\n        .assign({ summa_vien: parseFloat(newSummaVien) })\r\n        .assign({ norma: parseFloat(norma) })\r\n        .value();\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    }\r\n  }\r\n\r\n  function cenaHandleChange(event) {\r\n    setCena(event.target.value);\r\n  }\r\n  function normaHandleChange(event) {\r\n    setNorma(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <tr className=\"align-middle\">\r\n      <td>{props.item.kods}</td>\r\n      <td>{props.item.nosaukums}</td>\r\n      <td>{props.item.mervieniba}</td>\r\n      <td>\r\n        <Cena\r\n          validated={cenaValidated}\r\n          cena={cena}\r\n          handleChange={cenaHandleChange}\r\n          handleValidation={(e) => cenaHandleValidation(props.fileName, e)}\r\n          fileName={props.fileName}\r\n        />\r\n      </td>\r\n      <td>\r\n        <Norma\r\n          validated={normaValidated}\r\n          norma={norma}\r\n          handleChange={normaHandleChange}\r\n          handleValidation={(e) => normaHandleValidation(props.fileName, e)}\r\n          fileName={props.fileName}\r\n        />\r\n      </td>\r\n      <td>{summaIepak.toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n      <td>{summaVien.toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n      <td>\r\n        <DeletePackageEntryButton\r\n          packageName={props.item.nosaukums}\r\n          productName={props.productName}\r\n          fileName={props.fileName}\r\n          {...props}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction Cena(props) {\r\n  return (\r\n    <Form noValidate validated={props.validated}>\r\n      <Form.Group>\r\n        <Form.Control\r\n          id=\"cena\"\r\n          type=\"number\"\r\n          required\r\n          placeholder=\"Цена\"\r\n          value={props.cena}\r\n          onChange={props.handleChange}\r\n          onBlur={props.handleValidation}\r\n          style={{ width: \"120px\", height: \"28px\" }}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          Введите цену\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction Norma(props) {\r\n  return (\r\n    <Form noValidate validated={props.validated}>\r\n      <Form.Group>\r\n        <Form.Control\r\n          id=\"daudzums\"\r\n          type=\"number\"\r\n          required\r\n          placeholder=\"Кол-во\"\r\n          value={props.norma}\r\n          onChange={props.handleChange}\r\n          onBlur={props.handleValidation}\r\n          style={{ width: \"120px\", height: \"28px\" }}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          Введите количество\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction DeletePackageEntryButton(props) {\r\n  function handleClick() {\r\n    let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n    ipcRenderer.send(\"warning-delete\");\r\n    ipcRenderer.on(\"confirm-delete\", (event, arg) => {\r\n      lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({ nosaukums: props.productName })\r\n        .get(\"iepakojums\")\r\n        .get(\"elementi\")\r\n        .remove({ nosaukums: props.packageName })\r\n        .value();\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    });\r\n  }\r\n  return (\r\n    <Button\r\n      variant=\"danger\"\r\n      size=\"sm\"\r\n      onClick={(e) => handleClick(props.fileName, e)}\r\n    >\r\n      remove\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default PackageBlock;\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport globalSettings from \"../globalSettings\";\r\nimport GeneralizedTable from \"../GeneralizedTable\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction WorkersBlock(props) {\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n  let razosanasGrupas = lodash\r\n    .chain(data)\r\n    .get(props.type)\r\n    .find({ nosaukums: props.nosaukums })\r\n    .get(\"ražošanas_grupas\")\r\n    .value();\r\n\r\n  let componentList = [];\r\n\r\n  razosanasGrupas.forEach((item) => {\r\n    componentList.push(\r\n      <ProductionGroupBlock\r\n        {...props}\r\n        key={item.nosaukums}\r\n        item={item}\r\n        productName={props.nosaukums}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-center\">Salary</h3>\r\n      {componentList}\r\n      <AddNewRazGrupaDropdown productName={props.nosaukums} {...props} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ProductionGroupBlock(props) {\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n  let nodoklis = lodash.chain(data).get(\"darbinieku_nodoklis\").value();\r\n\r\n  let headerNames = [\r\n    \"Worker\",\r\n    \"Salary\",\r\n    \"Salary with tax (\" + nodoklis + \"%)\",\r\n    \"Hours worked\",\r\n    \"Sum\",\r\n    \"Expence/unit\",\r\n    \"Remove\",\r\n  ];\r\n\r\n  // // Get the vien daudzums\r\n  const [vienDaudzums, setVienDaudzums] = useState(\r\n    parseFloat(props.item.daudzums)\r\n  );\r\n  const [vienDaudzumsValidated, setVienDaudzumsValidated] = useState(false);\r\n\r\n  function vienDaudzumsHandleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setVienDaudzumsValidated(true);\r\n    } else {\r\n      setVienDaudzumsValidated(false);\r\n      // Update the value\r\n      let newVienDaudzums = event.target.value;\r\n\r\n      let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n      let razGrupaObj = lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({ nosaukums: props.productName })\r\n        .get(\"ražošanas_grupas\")\r\n        .find({ nosaukums: props.item.nosaukums })\r\n        .value();\r\n\r\n      let darbinieki = razGrupaObj[\"darbinieki\"];\r\n\r\n      razGrupaObj[\"daudzums\"] = parseFloat(newVienDaudzums);\r\n\r\n      // Update the summa_vien entry for each item\r\n      darbinieki.forEach((item) => {\r\n        item[\"summa_vien\"] = item[\"summa\"] / razGrupaObj[\"daudzums\"];\r\n      });\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    }\r\n  }\r\n\r\n  function vienDaudzumsHandleChange(event) {\r\n    setVienDaudzums(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"text-center\">{props.item.nosaukums}</h4>\r\n      <Amount\r\n        validated={vienDaudzumsValidated}\r\n        vienDaudzums={vienDaudzums}\r\n        vienDaudzumsHandleChange={vienDaudzumsHandleChange}\r\n        vienDaudzumsHandleValidation={(e) => vienDaudzumsHandleValidation(e)}\r\n      />\r\n      <GeneralizedTable\r\n        headerNames={headerNames}\r\n        tableBody={\r\n          <WorkersTableBody\r\n            vienDaudzums={vienDaudzums}\r\n            razGrupNosaukums={props.item.nosaukums}\r\n            {...props}\r\n          />\r\n        }\r\n      />\r\n      <AddNewItemDropdown\r\n        nosaukums={props.nosaukums}\r\n        type={props.type}\r\n        {...props}\r\n      />\r\n      <DeleteRazGrupasButton\r\n        {...props}\r\n        razGrupNosaukums={props.item.nosaukums}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Amount(props) {\r\n  return (\r\n    <Container fluid>\r\n      <Form noValidate validated={props.validated}>\r\n        <Form.Group as={Row}>\r\n          <Col md=\"4\">\r\n            <div className=\"text-end\">\r\n              <Form.Label>Number of units produced:</Form.Label>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <Form.Control\r\n              id=\"daudzums\"\r\n              type=\"number\"\r\n              required\r\n              placeholder=\"Кол-во\"\r\n              value={props.vienDaudzums}\r\n              onChange={props.vienDaudzumsHandleChange}\r\n              onBlur={props.vienDaudzumsHandleValidation}\r\n              style={{ width: \"120px\", height: \"30px\" }}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Введите количество\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction WorkersTableBody(props) {\r\n  let workers = props.item.darbinieki;\r\n  let componentList = [];\r\n\r\n  let summa = 0.0;\r\n  let summa_vien = 0.0;\r\n\r\n  // Make the list of components\r\n  workers.forEach((item) => {\r\n    componentList.push(\r\n      <WorkersTableEntry\r\n        {...props}\r\n        key={item.nosaukums}\r\n        razGrupNosaukums={props.razGrupNosaukums}\r\n        item={item}\r\n        productName={props.nosaukums}\r\n      />\r\n    );\r\n    summa += item[\"summa\"];\r\n    summa_vien += item[\"summa_vien\"];\r\n  });\r\n\r\n  return (\r\n    <tbody>\r\n      {componentList}\r\n      <tr className=\"align-middle\">\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td className=\"text-end fw-bold\">Sum:</td>\r\n        <td>{summa.toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n        <td>{summa_vien.toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n}\r\n\r\nfunction WorkersTableEntry(props) {\r\n  const [norma, setNorma] = useState(parseFloat(props.item.norma));\r\n  const [normaValidated, setNormaValidated] = useState(false);\r\n\r\n  const [summa] = useState(parseFloat(props.item.summa));\r\n  const [summaVien] = useState(summa / props.vienDaudzums);\r\n\r\n  function normaHandleValidation(fileName, event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setNormaValidated(true);\r\n    } else {\r\n      setNormaValidated(false);\r\n\r\n      let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n      let darbinieksObj = lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({ nosaukums: props.productName })\r\n        .get(\"ražošanas_grupas\")\r\n        .find({ nosaukums: props.razGrupNosaukums })\r\n        .get(\"darbinieki\")\r\n        .find({ nosaukums: props.item.nosaukums })\r\n        .value();\r\n\r\n      // Update the value\r\n      let newSumma = norma * darbinieksObj[\"alga_nodoklis\"];\r\n      let newSummaVien = newSumma / props.vienDaudzums;\r\n\r\n      lodash\r\n        .chain(darbinieksObj)\r\n        .assign({ summa: parseFloat(newSumma) })\r\n        .assign({ summa_vien: parseFloat(newSummaVien) })\r\n        .assign({ norma: parseFloat(norma) })\r\n        .value();\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    }\r\n  }\r\n\r\n  function normaHandleChange(event) {\r\n    setNorma(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <tr className=\"align-middle\">\r\n      <td>{props.item.nosaukums}</td>\r\n      <td>{props.item.alga}</td>\r\n      <td>\r\n        {props.item.alga_nodoklis.toFixed(\r\n          globalSettings[\"floatPrecisionSecondary\"]\r\n        )}\r\n      </td>\r\n      <td>\r\n        <Norma\r\n          validated={normaValidated}\r\n          norma={norma}\r\n          handleChange={normaHandleChange}\r\n          handleValidation={(e) => normaHandleValidation(props.fileName, e)}\r\n          fileName={props.fileName}\r\n        />\r\n      </td>\r\n      <td>{summa.toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n      <td>{summaVien.toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n      <td>\r\n        <DeleteWorkersEntryButton {...props} />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction Norma(props) {\r\n  return (\r\n    <Form noValidate validated={props.validated}>\r\n      <Form.Group>\r\n        <Form.Control\r\n          id=\"daudzums\"\r\n          type=\"number\"\r\n          required\r\n          placeholder=\"Кол-во\"\r\n          value={props.norma}\r\n          onChange={props.handleChange}\r\n          onBlur={props.handleValidation}\r\n          style={{ width: \"120px\", height: \"30px\" }}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          Введите количество\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction DeleteWorkersEntryButton(props) {\r\n  function handleClick() {\r\n    let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n    ipcRenderer.send(\"warning-delete\");\r\n    ipcRenderer.on(\"confirm-delete\", (event, arg) => {\r\n      lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({ nosaukums: props.productName })\r\n        .get(\"ražošanas_grupas\")\r\n        .find({ nosaukums: props.razGrupNosaukums })\r\n        .get(\"darbinieki\")\r\n        .remove({ nosaukums: props.item.nosaukums })\r\n        .value();\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    });\r\n  }\r\n  return (\r\n    <Button\r\n      variant=\"danger\"\r\n      size=\"sm\"\r\n      onClick={(e) => handleClick(props.fileName, e)}\r\n    >\r\n      remove\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction DeleteRazGrupasButton(props) {\r\n  function handleClick() {\r\n    let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n    ipcRenderer.send(\"warning-delete\");\r\n    ipcRenderer.on(\"confirm-delete\", (event, arg) => {\r\n      lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({ nosaukums: props.productName })\r\n        .get(\"ražošanas_grupas\")\r\n        .remove({ nosaukums: props.razGrupNosaukums })\r\n        .value();\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    });\r\n  }\r\n  return (\r\n    <Button\r\n      variant=\"danger\"\r\n      size=\"sm\"\r\n      onClick={(e) => handleClick(props.fileName, e)}\r\n    >\r\n      Remove group\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction AddNewRazGrupaDropdown(props) {\r\n  function handleGeneral(event) {\r\n    let info = { to: \"produkti\", from: \"ražošanas_grupas\", type: \"group\" };\r\n\r\n    ipcRenderer.send(\"expenses-add-window\", [\r\n      props.nosaukums,\r\n      JSON.stringify(info),\r\n    ]);\r\n  }\r\n\r\n  function handleCreateNew(event, info) {\r\n    ipcRenderer.send(\"razGrupas:ask-for-window\", [JSON.stringify(info)]);\r\n  }\r\n\r\n  let dropDownButton = \"\";\r\n  if (props.type === \"produkti\") {\r\n    dropDownButton = (\r\n      <Button\r\n        variant=\"secondary\"\r\n        size=\"sm\"\r\n        onClick={(e) =>\r\n          handleCreateNew(e, {\r\n            productName: props.productName,\r\n            type: \"produkti\",\r\n          })\r\n        }\r\n      >\r\n        Add manufacturing group\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return <div className=\"addEntryButtons\">{dropDownButton}</div>;\r\n}\r\n\r\nfunction AddNewItemDropdown(props) {\r\n  function handleGeneral(event, type) {\r\n    ipcRenderer.send(\"expenses-add-window\", [\r\n      props.nosaukums,\r\n      JSON.stringify(type),\r\n    ]);\r\n  }\r\n\r\n  let dropDownButton = \"\";\r\n  if (props.type === \"produkti\") {\r\n    dropDownButton = (\r\n      <Button\r\n        variant=\"secondary\"\r\n        size=\"sm\"\r\n        onClick={(e) =>\r\n          handleGeneral(e, {\r\n            to: \"produkti\",\r\n            from: \"darbinieki\",\r\n            type: \"all\",\r\n            raz_grupas_nosaukums: props.item.nosaukums,\r\n          })\r\n        }\r\n      >\r\n        Add new worker\r\n      </Button>\r\n    );\r\n  } else if (props.type === \"grupas\") {\r\n    dropDownButton = (\r\n      <Button\r\n        variant=\"secondary\"\r\n        size=\"sm\"\r\n        onClick={(e) =>\r\n          handleGeneral(e, {\r\n            to: \"grupas\",\r\n            from: \"darbinieki\",\r\n            type: \"all\",\r\n            raz_grupas_nosaukums: props.item.nosaukums,\r\n          })\r\n        }\r\n      >\r\n        Add new worker\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return <div className=\"addEntryButtons\">{dropDownButton}</div>;\r\n}\r\n\r\nexport default WorkersBlock;\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import Dropdown from 'react-bootstrap/Dropdown';\r\n// import Button from 'react-bootstrap/Button';\r\nimport Form from \"react-bootstrap/Form\";\r\n// import Col from 'react-bootstrap/Col';\r\n// import Row from 'react-bootstrap/Row';\r\n\r\nimport globalSettings from \"../globalSettings\";\r\nimport GeneralizedTable from \"../GeneralizedTable\";\r\n// import AddNewItemButton from './AddNewItemButton';\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction ElectricityBlock(props) {\r\n  let headerNames = [\"Name\", \"Value\"];\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-center\">Electricity</h3>\r\n      <GeneralizedTable\r\n        headerNames={headerNames}\r\n        tableBody={<ElectricityTableBody {...props} />}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ElectricityTableBody(props) {\r\n  // Get electricity data from main process\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n  let productObj = lodash\r\n    .chain(data)\r\n    .get(props.type)\r\n    .find({ nosaukums: props.nosaukums })\r\n    .value();\r\n\r\n  let electricityGeneral = lodash.chain(data).get(\"elektriba\").value();\r\n\r\n  let electricityObj = productObj[\"elektriba\"];\r\n\r\n  const [daudzums, setDaudzums] = useState(electricityObj[\"vien_daudzums\"]);\r\n  const [daudzumsValidated, setDaudzumsValidated] = useState(false);\r\n\r\n  function daudzumsHandleChange(event) {\r\n    setDaudzums(event.target.value);\r\n  }\r\n\r\n  function daudzumsHandleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setDaudzumsValidated(true);\r\n    } else {\r\n      setDaudzumsValidated(false);\r\n      // Update the value\r\n      electricityObj[\"vien_daudzums\"] = parseFloat(daudzums);\r\n      electricityObj[\"summa\"] =\r\n        electricityGeneral[\"vien_summa\"] * electricityObj[\"vien_daudzums\"];\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tbody>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"col-md-3 text-end\">General price for unit:</td>\r\n          <td className=\"col-md-6\">\r\n            {electricityGeneral[\"vien_summa\"].toFixed(\r\n              globalSettings[\"floatPrecisionSecondary\"]\r\n            )}\r\n          </td>\r\n        </tr>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"text-end\">Number of units:</td>\r\n          <td>\r\n            <Form noValidate validated={daudzumsValidated}>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  required\r\n                  placeholder=\"Кол-во\"\r\n                  value={daudzums}\r\n                  onChange={daudzumsHandleChange}\r\n                  onBlur={daudzumsHandleValidation}\r\n                  style={{ width: \"120px\", height: \"30px\" }}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Введите количество\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n          </td>\r\n        </tr>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"text-end\">Sum:</td>\r\n          <td>\r\n            {electricityObj[\"summa\"].toFixed(\r\n              globalSettings[\"floatPrecisionSecondary\"]\r\n            )}\r\n          </td>\r\n        </tr>\r\n        {/* </tr> */}\r\n        {/* <tr className=\"align-middle\">\r\n                    <td className=\"text-end\">Сумма:</td>\r\n                    <td>{electricityObj[\"summa\"].toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n                </tr>\r\n                <tr className=\"align-middle \">\r\n                    <td className=\"text-end\">Цена/ед:</td>\r\n                    <td>{electricityObj[\"vien_summa\"].toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n                </tr> */}\r\n      </tbody>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ElectricityBlock;\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport \"../App.css\";\r\n\r\nimport globalSettings from \"../globalSettings\";\r\n\r\nimport GeneralizedTable from \"../GeneralizedTable\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction DepositBlock(props) {\r\n  let headerNames = [\"\", \"Value\"];\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-center\">Deposit</h3>\r\n      <GeneralizedTable\r\n        headerNames={headerNames}\r\n        tableBody={<DepositTableBody {...props} />}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction DepositTableBody(props) {\r\n  // Get electricity data from main process\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n  let productObj = lodash\r\n    .chain(data)\r\n    .get(props.type)\r\n    .find({ nosaukums: props.nosaukums })\r\n    .value();\r\n\r\n  let obj = productObj[\"deposit\"];\r\n\r\n  return (\r\n    <>\r\n      <tbody>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"col-md-3 text-end\">Value:</td>\r\n          <td>{obj.toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n        </tr>\r\n      </tbody>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DepositBlock;\r\n","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport '../App.css';\r\n\r\nimport globalSettings from '../globalSettings';\r\n\r\nimport GeneralizedTable from '../GeneralizedTable';\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require('lodash');\r\n\r\n\r\nfunction AlcoholTaxBlock(props) {\r\n\r\n    let headerNames = [\"Название\", \"Значение\"]\r\n\r\n    let data = JSON.parse(ipcRenderer.sendSync('get-data'));\r\n\r\n    let productObj = lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({nosaukums: props.nosaukums})\r\n        .value()\r\n\r\n    let obj = productObj[\"alcohol_tax\"]\r\n\r\n    if (obj == null) {\r\n        return null;\r\n    } else {\r\n        return (\r\n            <> \r\n                <h3 className=\"text-center\">Акциз</h3>\r\n                <GeneralizedTable \r\n                    headerNames={headerNames}\r\n                    tableBody=\r\n                    {<DepositTableBody \r\n                        {...props}\r\n                    />}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction DepositTableBody(props) {\r\n    let data = JSON.parse(ipcRenderer.sendSync('get-data'));\r\n\r\n    let productObj = lodash\r\n        .chain(data)\r\n        .get(props.type)\r\n        .find({nosaukums: props.nosaukums})\r\n        .value()\r\n\r\n    let obj = productObj[\"alcohol_tax\"]\r\n\r\n    const [alcohol, setAlcohol] = useState(obj[\"alcohol\"]);\r\n    const [alcoholValidated, setAlcoholValidated] = useState(false);\r\n\r\n    const [volume, setVolume] = useState(obj[\"volume\"]);\r\n    const [volumeValidated, setVolumeValidated] = useState(false);\r\n\r\n    function volumeHandleChange(event) {\r\n        setVolume(event.target.value)\r\n    };\r\n\r\n    function alcoholHandleChange(event) {\r\n        setAlcohol(event.target.value)\r\n    };\r\n\r\n    function volumeHandleValidation(event) {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setVolumeValidated(true);\r\n        } else {\r\n            setVolumeValidated(false);\r\n            // Update the value\r\n            obj[\"volume\"] = parseFloat(volume)\r\n            obj[\"summa\"] = ((obj[\"value\"] * obj[\"alcohol\"]) / 100) * obj[\"volume\"];\r\n\r\n            ipcRenderer.sendSync('modify-data', [ JSON.stringify(data) ])\r\n        }\r\n    };\r\n\r\n    function alcoholHandleValidation(event) {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setAlcoholValidated(true);\r\n        } else {\r\n            setAlcoholValidated(false);\r\n            // Update the value\r\n            obj[\"alcohol\"] = parseFloat(alcohol)\r\n            obj[\"summa\"] = ((obj[\"value\"] * obj[\"alcohol\"]) / 100) * obj[\"volume\"];\r\n\r\n            ipcRenderer.sendSync('modify-data', [ JSON.stringify(data) ])\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <> \r\n            <tbody>\r\n                <tr className=\"align-middle\">\r\n                    <td className=\"col-md-3 text-end\">Акциз (за 1 градус на 100л):</td>\r\n                    <td>{obj[\"value\"].toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n                </tr>\r\n                <tr className=\"align-middle\">\r\n                    <td className=\"text-end\">Градусность (%):</td>\r\n                    <td>\r\n                        <Form noValidate validated={alcoholValidated}>\r\n                            <Form.Group>\r\n                                <Form.Control type=\"number\" required \r\n                                    placeholder=\"Кол-во\" \r\n                                    value={alcohol} \r\n                                    onChange={alcoholHandleChange}\r\n                                    onBlur={alcoholHandleValidation}\r\n                                    style={{ width: '120px', height: '30px' }}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Введите количество\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>  \r\n                        </Form>    \r\n                    </td>\r\n                </tr>\r\n                <tr className=\"align-middle\">\r\n                    <td className=\"text-end\">Обьём (Л):</td>\r\n                    <td>\r\n                        <Form noValidate validated={volumeValidated}>\r\n                            <Form.Group>\r\n                                <Form.Control type=\"number\" required \r\n                                    placeholder=\"Кол-во\" \r\n                                    value={volume} \r\n                                    onChange={volumeHandleChange}\r\n                                    onBlur={volumeHandleValidation}\r\n                                    style={{ width: '120px', height: '30px' }}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Введите количество\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>  \r\n                        </Form>    \r\n                    </td>\r\n                </tr>\r\n                <tr className=\"align-middle\">\r\n                    <td className=\"col-md-3 text-end\">Сумма:</td>\r\n                    <td>{obj[\"summa\"].toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td>\r\n                </tr>\r\n            </tbody>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AlcoholTaxBlock;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport IzejvielasBlock from \"./RawMaterial/IzejvielasBlock\";\r\nimport FixedCostBlock from \"./FixedCost/FixedCostBlock\";\r\nimport PackageBlock from \"./Package/PackageBlock\";\r\nimport WorkersBlock from \"./Workers/WorkersBlock\";\r\nimport ElectricityBlock from \"./Electricity/ElectricityBlock\";\r\nimport DepositBlock from \"./Deposit/DepositBlock\";\r\nimport NavBar from \"./NavBar/NavBar\";\r\n\r\nimport globalSettings from \"./globalSettings\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport AlcoholTaxBlock from \"./AlcoholTax/AlcoholTaxBlock\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction ProductPage() {\r\n  // We can use the `useParams` hook here to access\r\n  // the dynamic pieces of the URL.\r\n  let { kods } = useParams();\r\n\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n  let productObject = lodash\r\n    .chain(data)\r\n    .get(\"produkti\")\r\n    .find({ kods: parseInt(kods) })\r\n    .value();\r\n\r\n  return (\r\n    <>\r\n      {/* <NavigationBar destinationName={productObject[\"nosaukums\"]}/> */}\r\n      <NavBar />\r\n      <h2>{\"Product name: \" + productObject[\"nosaukums\"]}</h2>\r\n      <h4>{\"Code: \" + productObject[\"kods\"]}</h4>\r\n      <h4>\r\n        {\"Price: \" +\r\n          parseFloat(productObject[\"cena\"]).toFixed(\r\n            globalSettings[\"floatPrecision\"]\r\n          )}\r\n      </h4>\r\n      <CenaBezIepak productObject={productObject} />\r\n      <ElectricityBlock\r\n        nosaukums={productObject[\"nosaukums\"]}\r\n        type={\"produkti\"}\r\n      />\r\n      <IzejvielasBlock\r\n        nosaukums={productObject[\"nosaukums\"]}\r\n        type={\"produkti\"}\r\n      />\r\n      <FixedCostBlock\r\n        nosaukums={productObject[\"nosaukums\"]}\r\n        type={\"produkti\"}\r\n      />\r\n      <PackageBlock nosaukums={productObject[\"nosaukums\"]} type={\"produkti\"} />\r\n      <WorkersBlock nosaukums={productObject[\"nosaukums\"]} type={\"produkti\"} />\r\n      <DepositBlock nosaukums={productObject[\"nosaukums\"]} type={\"produkti\"} />\r\n      <AlcoholTaxBlock\r\n        nosaukums={productObject[\"nosaukums\"]}\r\n        type={\"produkti\"}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction CenaBezIepak(props) {\r\n  let productObject = props.productObject;\r\n  if (productObject[\"grupa\"] === \"Bottles\") {\r\n    return (\r\n      <h4>\r\n        {\"Cena bez iepak: \" +\r\n          parseFloat(productObject[\"cena(bez iepak.)\"]).toFixed(\r\n            globalSettings[\"floatPrecision\"]\r\n          )}\r\n      </h4>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default ProductPage;\r\n","import React from \"react\";\r\n// import './App.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n// import Nav from 'react-bootstrap/Nav';\r\n// import NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport IzejvielasBlock from \"./RawMaterial/IzejvielasBlock\";\r\nimport FixedCostBlock from \"./FixedCost/FixedCostBlock\";\r\nimport PackageBlock from \"./Package/PackageBlock\";\r\nimport WorkersBlock from \"./Workers/WorkersBlock\";\r\nimport ElectricityBlock from \"./Electricity/ElectricityBlock\";\r\n\r\n// import globalSettings from './globalSettings';\r\n\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\n// const { ipcRenderer } = window.require(\"electron\");\r\n// const lodash = require('lodash');\r\n\r\nfunction GroupPage() {\r\n  // We can use the `useParams` hook here to access\r\n  // the dynamic pieces of the URL.\r\n  let { groupName } = useParams();\r\n\r\n  return (\r\n    <>\r\n      <NavigationBar groupName={groupName} />\r\n      <h2>{\"Grupa: \" + groupName}</h2>\r\n      <ElectricityBlock nosaukums={groupName} type={\"grupas\"} />\r\n      <IzejvielasBlock nosaukums={groupName} type={\"grupas\"} />\r\n      <FixedCostBlock nosaukums={groupName} type={\"grupas\"} />\r\n      <PackageBlock nosaukums={groupName} type={\"grupas\"} />\r\n      <WorkersBlock nosaukums={groupName} type={\"grupas\"} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction NavigationBar(props) {\r\n  let history = useHistory();\r\n\r\n  function handleClick(path, e) {\r\n    history.push(path);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand onClick={(e) => handleClick(\"/\")}>\r\n            На главную\r\n          </Navbar.Brand>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GroupPage;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./App.css\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\n\r\nfunction AddNewItemButton(props) {\r\n  function handleCLick() {\r\n    ipcRenderer.send(props.message);\r\n  }\r\n\r\n  return (\r\n    <div className=\"addEntryButtons\">\r\n      <Button\r\n        variant=\"secondary\"\r\n        size=\"sm\"\r\n        id=\"addEntryButtons\"\r\n        onClick={handleCLick}\r\n      >\r\n        Add\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNewItemButton;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\n\r\nimport AddNewItemButton from \"../AddNewItemButton\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport globalSettings from \"../globalSettings\";\r\nimport \"../App.css\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction RawMaterialAllPage() {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <h3 className=\"text-center\">Raw materials</h3>\r\n      <AddNewItemButton message={\"raw-material:ask-for-window\"} />\r\n      <NewTable />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction buttonFormatter(cell, row, rowIndex) {\r\n  return <DeleteRawButton nosaukums={row.nosaukums} />;\r\n}\r\n\r\nconst cellEdit = cellEditFactory({\r\n  mode: \"dbclick\",\r\n  blurToSave: true,\r\n  afterSaveCell: cenaUpdate,\r\n});\r\n\r\nfunction NewTable(props) {\r\n  // Get raw material data from main process\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n  data = lodash.chain(data).get(\"izejvielas\").value();\r\n\r\n  const { SearchBar } = Search;\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"kods\",\r\n      text: \"Code\",\r\n      editable: false,\r\n      sort: true,\r\n      headerAlign: \"center\",\r\n      headerStyle: { width: \"80px\" },\r\n    },\r\n    {\r\n      dataField: \"nosaukums\",\r\n      text: \"Name\",\r\n      sort: true,\r\n      headerAlign: \"center\",\r\n      editable: false,\r\n    },\r\n    {\r\n      dataField: \"mervieniba\",\r\n      text: \"Measure\",\r\n      headerAlign: \"center\",\r\n      headerStyle: { width: \"12%\" },\r\n      editable: false,\r\n    },\r\n    {\r\n      dataField: \"cena\",\r\n      text: \"Price\",\r\n      sort: true,\r\n      headerAlign: \"center\",\r\n      headerStyle: { width: \"200px\" },\r\n      validator: (newValue, row, column) => {\r\n        if (isNaN(newValue)) {\r\n          return {\r\n            valid: false,\r\n            message: \"Введите число\",\r\n          };\r\n        }\r\n        return true;\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Remove\",\r\n      headerAlign: \"center\",\r\n      headerStyle: { width: \"80px\" },\r\n      editable: false,\r\n      formatter: buttonFormatter,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ToolkitProvider keyField=\"nosaukums\" data={data} columns={columns} search>\r\n      {(props) => (\r\n        <div>\r\n          <h5>Search:</h5>\r\n          <SearchBar\r\n            {...props.searchProps}\r\n            className=\"custom-search-field\"\r\n            placeholder=\"e.g. sugar\"\r\n            srText=\"\"\r\n          />\r\n          <hr />\r\n          <BootstrapTable\r\n            {...props.baseProps}\r\n            bootstrap4\r\n            striped\r\n            hover\r\n            condensed\r\n            cellEdit={cellEdit}\r\n          />\r\n        </div>\r\n      )}\r\n    </ToolkitProvider>\r\n  );\r\n}\r\n\r\nfunction cenaUpdate(oldValue, newValue, row, column) {\r\n  let newCena = newValue;\r\n\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n  lodash\r\n    .chain(data)\r\n    .get(\"izejvielas\")\r\n    .find({ nosaukums: row.nosaukums })\r\n    .assign({ cena: parseFloat(newCena) })\r\n    .value();\r\n\r\n  // We need to update the value everythere i.e. in all groups and all products\r\n  // which have this specific expense in the list\r\n\r\n  // Get all products\r\n  let productObjects = lodash.chain(data).get(\"produkti\").value();\r\n\r\n  // Get all grupas\r\n  let groupObjects = lodash.chain(data).get(\"grupas\").value();\r\n\r\n  productObjects.forEach((product) => {\r\n    // Get object\r\n    let izejvielasObj = lodash\r\n      .chain(product)\r\n      .get(\"izejvielas\")\r\n      .find({ nosaukums: row.nosaukums })\r\n      .value();\r\n    // If object exists\r\n    if (izejvielasObj !== undefined) {\r\n      let newKopuma = newCena * izejvielasObj[\"daudzums\"];\r\n\r\n      lodash\r\n        .chain(izejvielasObj)\r\n        .assign({ cena: parseFloat(newCena) })\r\n        .assign({ kopuma: parseFloat(newKopuma) })\r\n        .value();\r\n    }\r\n  });\r\n\r\n  groupObjects.forEach((group) => {\r\n    let izejvielasObj = lodash\r\n      .chain(group)\r\n      .get(\"izejvielas\")\r\n      .find({ nosaukums: row.nosaukums })\r\n      .value();\r\n\r\n    if (izejvielasObj !== undefined) {\r\n      let newKopuma = newCena * izejvielasObj[\"daudzums\"];\r\n\r\n      lodash\r\n        .chain(izejvielasObj)\r\n        .assign({ cena: parseFloat(newCena) })\r\n        .assign({ kopuma: parseFloat(newKopuma) })\r\n        .value();\r\n    }\r\n  });\r\n\r\n  // Update data\r\n  ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data), false]);\r\n}\r\n\r\nfunction DeleteRawButton(props) {\r\n  function handleClick() {\r\n    let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n    ipcRenderer.send(\"warning-delete\");\r\n    ipcRenderer.on(\"confirm-delete\", (event, arg) => {\r\n      lodash\r\n        .chain(data)\r\n        .get(\"izejvielas\")\r\n        .remove({ nosaukums: props.nosaukums })\r\n        .value();\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    });\r\n  }\r\n  return (\r\n    <Button variant=\"danger\" size=\"sm\" onClick={handleClick}>\r\n      remove\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default RawMaterialAllPage;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nclass RawMaterialAddPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kods: \"\",\r\n      nosaukums: \"\",\r\n      mervieniba: \"\",\r\n      cena: \"\",\r\n      showAlert: false,\r\n      alertMessage: \"\",\r\n    };\r\n\r\n    this.data = {};\r\n\r\n    this.handleKodsChange = this.handleKodsChange.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleMervienibaChange = this.handleMervienibaChange.bind(this);\r\n    this.handlePriceChange = this.handlePriceChange.bind(this);\r\n\r\n    this.setShowAlert = this.setShowAlert.bind(this);\r\n    this.setAlertMessage = this.setAlertMessage.bind(this);\r\n  }\r\n\r\n  handleKodsChange(event) {\r\n    this.setState({ kods: event.target.value });\r\n  }\r\n  handleNameChange(event) {\r\n    this.setState({ nosaukums: event.target.value });\r\n  }\r\n  handleMervienibaChange(event) {\r\n    console.log(event.target.value);\r\n    this.setState({ mervieniba: event.target.value });\r\n  }\r\n  handlePriceChange(event) {\r\n    this.setState({ cena: event.target.value });\r\n  }\r\n  setShowAlert(value) {\r\n    this.setState({ showAlert: value });\r\n  }\r\n  setAlertMessage(value) {\r\n    this.setState({ alertMessage: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputAlert\r\n          showAlert={this.state.showAlert}\r\n          alertMessage={this.state.alertMessage}\r\n          onClose={() => this.setShowAlert(false)}\r\n        />\r\n        <InputForm\r\n          kods={this.state.kods}\r\n          nosaukums={this.state.nosaukums}\r\n          mervieniba={this.state.mervieniba}\r\n          cena={this.state.cena}\r\n          handleKodsChange={this.handleKodsChange}\r\n          handleMervienibaChange={this.handleMervienibaChange}\r\n          handleNameChange={this.handleNameChange}\r\n          handlePriceChange={this.handlePriceChange}\r\n          setShowAlert={this.setShowAlert}\r\n          setAlertMessage={this.setAlertMessage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction InputAlert(props) {\r\n  if (props.showAlert) {\r\n    return (\r\n      <Alert variant=\"danger\" onClose={props.onClose} dismissible>\r\n        {props.alertMessage}\r\n      </Alert>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction isNumeric(str) {\r\n  if (typeof str != \"string\") return false; // we only process strings!\r\n  return (\r\n    !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\r\n    !isNaN(parseFloat(str))\r\n  ); // ...and ensure strings of whitespace fail\r\n}\r\n\r\nclass InputForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    // Check the input correctness\r\n    // Get raw material data from main process\r\n    this.data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n    this.data = lodash.chain(this.data).get(\"izejvielas\").value();\r\n\r\n    // Check if empty\r\n    if (\r\n      this.props.nosaukums === \"\" ||\r\n      this.props.cena === \"\" ||\r\n      this.props.kods === \"\" ||\r\n      this.props.mervieniba === \"\"\r\n    ) {\r\n      this.props.setShowAlert(true);\r\n      this.props.setAlertMessage(\"Enter the  data\");\r\n    } else {\r\n      // Check if kods already exists\r\n      let element = this.data.find(\r\n        (element) => parseInt(element.kods) === parseInt(this.props.kods)\r\n      );\r\n      if (typeof element != \"undefined\") {\r\n        this.props.setShowAlert(true);\r\n        this.props.setAlertMessage(`Code \"${this.props.kods}\" already exists`);\r\n      } else {\r\n        // Check if element already exists\r\n        element = this.data.find(\r\n          (element) => element.nosaukums === this.props.nosaukums\r\n        );\r\n        if (typeof element != \"undefined\") {\r\n          this.props.setShowAlert(true);\r\n          this.props.setAlertMessage(\r\n            `Raw material with name \"${this.props.nosaukums}\" already exists`\r\n          );\r\n          // Check if price is written correctly\r\n        } else if (!isNumeric(this.props.cena)) {\r\n          this.props.setShowAlert(true);\r\n          this.props.setAlertMessage(`Price entered has wrong format`);\r\n        } else if (!isNumeric(this.props.kods)) {\r\n          this.props.setShowAlert(true);\r\n          this.props.setAlertMessage(`Code entered has wrong format`);\r\n        } else {\r\n          let paramObj = {\r\n            kods: parseInt(this.props.kods),\r\n            nosaukums: this.props.nosaukums,\r\n            mervieniba: this.props.mervieniba,\r\n            cena: parseFloat(this.props.cena),\r\n          };\r\n\r\n          let tempData = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n          lodash.chain(tempData).get(\"izejvielas\").push(paramObj).value();\r\n          ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(tempData)]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\r\n          <Form.Label>Raw material code</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"e.g. 53\"\r\n            value={this.props.kods}\r\n            onChange={this.props.handleKodsChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"e.g. water\"\r\n            value={this.props.nosaukums}\r\n            onChange={this.props.handleNameChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\r\n          <Form.Label>Measure</Form.Label>\r\n          <Form.Select\r\n            aria-label=\"Default select example\"\r\n            value={this.props.mervieniba}\r\n            onChange={this.props.handleMervienibaChange}\r\n          >\r\n            <option value=\"\">Measure</option>\r\n            <option value=\"kg\">kg</option>\r\n            <option value=\"gab\">pcs</option>\r\n            <option value=\"l\">l</option>\r\n          </Form.Select>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formGroupPrice\">\r\n          <Form.Label>Price</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"e.g. 5.42\"\r\n            value={this.props.cena}\r\n            onChange={this.props.handlePriceChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n          submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RawMaterialAddPage;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require('lodash');\r\n\r\nclass FixedCostAllAddPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nosaukums: '',\r\n            cena: '',\r\n            showAlert: false,\r\n            alertMessage: \"\"\r\n        };\r\n\r\n        this.data = {};\r\n  \r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handlePriceChange = this.handlePriceChange.bind(this);\r\n\r\n        this.setShowAlert = this.setShowAlert.bind(this);\r\n        this.setAlertMessage = this.setAlertMessage.bind(this);\r\n\r\n    }\r\n  \r\n    handleNameChange(event) {\r\n        this.setState({nosaukums: event.target.value});\r\n    }\r\n    handlePriceChange(event) {\r\n        this.setState({cena: event.target.value});\r\n    }\r\n    setShowAlert(value) {\r\n        this.setState({showAlert: value});\r\n    }\r\n    setAlertMessage(value) {\r\n        this.setState({alertMessage: value});\r\n    }\r\n  \r\n    \r\n    render() {\r\n\r\n        return (\r\n            <>\r\n            <InputAlert \r\n                showAlert={this.state.showAlert} \r\n                alertMessage={this.state.alertMessage} \r\n                onClose={() => this.setShowAlert(false)}\r\n            />\r\n            <InputForm \r\n                nosaukums={this.state.nosaukums}\r\n                cena={this.state.cena}\r\n\r\n                handleNameChange={this.handleNameChange} \r\n                handlePriceChange={this.handlePriceChange} \r\n                setShowAlert={this.setShowAlert}  \r\n                setAlertMessage={this.setAlertMessage}   \r\n            />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction InputAlert(props) {\r\n\r\n    if (props.showAlert) {\r\n        return (\r\n            <Alert variant=\"danger\" onClose={props.onClose} dismissible>\r\n                {props.alertMessage}\r\n            </Alert>\r\n        );\r\n      }\r\n    return (null)\r\n}\r\n\r\nfunction isNumeric(str) {\r\n    if (typeof str != \"string\") return false // we only process strings!  \r\n    return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\r\n           !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\r\n}\r\n\r\nclass InputForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        // Check the input correctness\r\n        // Get raw material data from main process\r\n\t\t// this.data = ipcRenderer.sendSync('get', [\r\n        //     [],\r\n        //     [],\r\n        //     \"/../data/raw-material-all.json\"\r\n        // ]);\r\n\t\t// this.data = JSON.parse(this.data)\r\n\r\n        this.data = JSON.parse(ipcRenderer.sendSync('get-data'));\r\n        this.data = lodash\r\n            .chain(this.data)\r\n            .get(\"fiksētie\")\r\n            .value()\r\n\r\n\r\n        // Check if empty\r\n        if (this.props.nosaukums === \"\" || this.props.cena === \"\") {\r\n            this.props.setShowAlert(true)\r\n            this.props.setAlertMessage(\"Введите данные\")\r\n        } else {\r\n            // Check if element already exists\r\n            let element = this.data.find(element => element.nosaukums === this.props.nosaukums);\r\n            if (typeof(element) != \"undefined\") {\r\n                this.props.setShowAlert(true)\r\n                this.props.setAlertMessage(`Фиксированная затрата с названием \"${this.props.nosaukums}\" уже существует`);\r\n            // Check if price is written correctly\r\n            } else if (!isNumeric(this.props.cena)) {\r\n                this.props.setShowAlert(true)\r\n                this.props.setAlertMessage(`Цена введена в неправильном формате`);\r\n            } else {\r\n                let paramObj = \r\n                    { \"nosaukums\": this.props.nosaukums, \"cena\": parseFloat(this.props.cena)}\r\n                // Send the values to main process\r\n                let tempData = JSON.parse(ipcRenderer.sendSync('get-data'));\r\n                lodash\r\n                    .chain(tempData)\r\n                    .get(\"fiksētie\")\r\n                    .push(paramObj)\r\n                    .value()\r\n                ipcRenderer.sendSync('modify-data', [ JSON.stringify(tempData) ])\r\n            }\r\n        } \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\r\n                    <Form.Label>Название Фиксированной Затраты</Form.Label>\r\n                    <Form.Control placeholder=\"Название\" value={this.props.nosaukums} onChange={this.props.handleNameChange}  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPrice\">\r\n                    <Form.Label>Стоимость</Form.Label>\r\n                    <Form.Control placeholder=\"Цена\" value={this.props.cena} onChange={this.props.handlePriceChange} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n                    Подтвердить\r\n                </Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FixedCostAllAddPage;","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport GeneralizedTable from \"../GeneralizedTable\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport globalSettings from \"../globalSettings\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction FixedCostAllPage() {\r\n  let headerNames = [\"Name\", \"Price\"];\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {/* <RawMaterialTable/> */}\r\n      <h3 className=\"text-center\">Fixed costs</h3>\r\n      <GeneralizedTable headerNames={headerNames} tableBody={<TableBody />} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TableBody() {\r\n  // Get fixed costs data from main process\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n  let fixedGeneral = lodash.chain(data).get(\"fiksētie\").value();\r\n\r\n  const [daudzums, setDaudzums] = useState(fixedGeneral[\"vien_daudzums\"]);\r\n  const [daudzumsValidated, setDaudzumsValidated] = useState(false);\r\n\r\n  function daudzumsHandleChange(event) {\r\n    setDaudzums(event.target.value);\r\n  }\r\n\r\n  function daudzumsHandleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setDaudzumsValidated(true);\r\n    } else {\r\n      setDaudzumsValidated(false);\r\n      // Update the value\r\n      fixedGeneral[\"vien_daudzums\"] = parseFloat(daudzums);\r\n      fixedGeneral[\"vien_summa\"] =\r\n        fixedGeneral[\"summa\"] / fixedGeneral[\"vien_daudzums\"];\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n\r\n      productUpdate(fixedGeneral[\"vien_summa\"]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tbody>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"col-md-4 text-end\">Units produced:</td>\r\n          <td>\r\n            <Form noValidate validated={daudzumsValidated}>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  required\r\n                  placeholder=\"Кол-во\"\r\n                  value={daudzums}\r\n                  onChange={daudzumsHandleChange}\r\n                  onBlur={daudzumsHandleValidation}\r\n                  style={{ width: \"200px\", height: \"30px\" }}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Введите количество\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n          </td>\r\n        </tr>\r\n        <Elements elementi={fixedGeneral[\"elementi\"]} />\r\n        <tr className=\"align-middle\">\r\n          <td className=\"text-end\">Sum:</td>\r\n          <td>\r\n            {fixedGeneral[\"summa\"].toFixed(\r\n              globalSettings[\"floatPrecisionSecondary\"]\r\n            )}\r\n          </td>\r\n        </tr>\r\n        <tr className=\"align-middle \">\r\n          <td className=\"text-end\">Price/unit:</td>\r\n          <td>\r\n            {fixedGeneral[\"vien_summa\"].toFixed(\r\n              globalSettings[\"floatPrecisionSecondary\"]\r\n            )}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Elements(props) {\r\n  let elementi = props.elementi;\r\n  let list = [];\r\n\r\n  elementi.forEach((item) => {\r\n    list.push(<Element key={item.nosaukums} item={item} />);\r\n  });\r\n  return list;\r\n}\r\n\r\nfunction Element(props) {\r\n  let item = props.item;\r\n\r\n  const [summa, setSumma] = useState(parseFloat(item[\"value\"]));\r\n  const [summaValidated, setSummaValidated] = useState(false);\r\n\r\n  function summaHandleChange(event) {\r\n    setSumma(event.target.value);\r\n  }\r\n\r\n  function summaHandleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setSummaValidated(true);\r\n    } else {\r\n      setSummaValidated(false);\r\n\r\n      let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n      let fixedGeneral = lodash.chain(data).get(\"fiksētie\").value();\r\n\r\n      let fixedElement = lodash\r\n        .chain(fixedGeneral)\r\n        .get(\"elementi\")\r\n        .find({ nosaukums: item[\"nosaukums\"] })\r\n        .value();\r\n\r\n      // Update the value\r\n      fixedElement[\"value\"] = parseFloat(summa);\r\n\r\n      let fixedElementi = fixedGeneral[\"elementi\"];\r\n      let total = parseFloat(0);\r\n\r\n      fixedElementi.forEach((item) => {\r\n        total += item[\"value\"];\r\n      });\r\n\r\n      fixedGeneral[\"summa\"] = parseFloat(total);\r\n      fixedGeneral[\"vien_summa\"] =\r\n        fixedGeneral[\"summa\"] / fixedGeneral[\"vien_daudzums\"];\r\n\r\n      console.log(fixedGeneral[\"vien_summa\"]);\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n\r\n      productUpdate(fixedGeneral[\"vien_summa\"]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <tr className=\"align-middle\">\r\n      <td className=\"text-end\">{item[\"nosaukums\"] + \":\"}</td>\r\n      <td>\r\n        <Form noValidate validated={summaValidated}>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"number\"\r\n              required\r\n              placeholder=\"Кол-во\"\r\n              value={summa}\r\n              onChange={summaHandleChange}\r\n              onBlur={summaHandleValidation}\r\n              style={{ width: \"200px\", height: \"30px\" }}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Введите количество\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction productUpdate(vien_summa) {\r\n  let tempData = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n  // Price per each product must be updated for each product\r\n  let productObjects = lodash.chain(tempData).get(\"produkti\").value();\r\n\r\n  productObjects.forEach((product) => {\r\n    let fixedObj = product[\"fiksētie\"];\r\n    fixedObj[\"vien_summa\"] = vien_summa;\r\n    fixedObj[\"summa\"] = fixedObj[\"vien_summa\"] * fixedObj[\"vien_daudzums\"];\r\n  });\r\n\r\n  // Update data\r\n  ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(tempData)]);\r\n}\r\n\r\nexport default FixedCostAllPage;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nimport GeneralizedTable from \"./GeneralizedTable\";\r\n\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport globalSettings from \"./globalSettings\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nlet info = \"\";\r\nlet destinationEntryName = \"\";\r\n\r\nfunction AddExpensesPage() {\r\n  let { destinationEntryNameTemp, infoTemp } = useParams();\r\n\r\n  destinationEntryName = destinationEntryNameTemp;\r\n  info = JSON.parse(infoTemp);\r\n\r\n  let expenses = \"\";\r\n  let headerNames = \"\";\r\n\r\n  switch (info[\"from\"]) {\r\n    case \"izejvielas\":\r\n      headerNames = [\"Code\", \"Name\", \"Measure\", \"Price\", \"Add\"];\r\n      break;\r\n    case \"fiksētie\":\r\n      headerNames = [\"Name\", \"Price\", \"Add\"];\r\n      break;\r\n    case \"iepakojums\":\r\n      headerNames = [\"Code\", \"Name\", \"Measure\", \"Price\", \"Add\"];\r\n      break;\r\n    case \"darbinieki\":\r\n      headerNames = [\"Title\", \"Hourly rate\", \"Hourly rate with tax\", \"Add\"];\r\n      break;\r\n    case \"ražošanas_grupas\":\r\n      headerNames = [\"Name\", \"Add\"];\r\n      break;\r\n    default:\r\n      headerNames = [\"Name\", \"Add\"];\r\n  }\r\n\r\n  if (info[\"type\"] === \"all\") {\r\n    let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n    expenses = lodash.chain(data).get(info[\"from\"]).value();\r\n  } else if (info[\"type\"] === \"group\") {\r\n    let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n    let groupName = lodash\r\n      .chain(data)\r\n      .get(\"produkti\")\r\n      .find({ nosaukums: destinationEntryName })\r\n      .get(\"grupa\")\r\n      .value();\r\n\r\n    // Get the desired data\r\n    if (info[\"from\"] === \"iepakojums\") {\r\n      expenses = lodash\r\n        .chain(data)\r\n        .get(\"grupas\")\r\n        .find({ nosaukums: groupName })\r\n        .get(\"iepakojums\")\r\n        .get(\"elementi\")\r\n        .value();\r\n    } else {\r\n      expenses = lodash\r\n        .chain(data)\r\n        .get(\"grupas\")\r\n        .find({ nosaukums: groupName })\r\n        .get(info[\"from\"])\r\n        .value();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AddExpensesPagePageClass\r\n      destinationEntryName={destinationEntryName}\r\n      expenses={expenses}\r\n      headerNames={headerNames}\r\n      info={info}\r\n    />\r\n  );\r\n}\r\n\r\nclass AddExpensesPagePageClass extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAlert: false,\r\n      alertMessage: \"\",\r\n    };\r\n\r\n    this.entryName = props.entryName;\r\n    this.expenses = props.expenses;\r\n\r\n    this.setShowAlert = this.setShowAlert.bind(this);\r\n    this.setAlertMessage = this.setAlertMessage.bind(this);\r\n  }\r\n\r\n  setShowAlert(value) {\r\n    this.setState({ showAlert: value });\r\n  }\r\n\r\n  setAlertMessage(value) {\r\n    this.setState({ alertMessage: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <AddAlert\r\n          showAlert={this.state.showAlert}\r\n          alertMessage={this.state.alertMessage}\r\n          onClose={() => this.setShowAlert(false)}\r\n        />\r\n        <ExpenseTable\r\n          setShowAlert={this.setShowAlert}\r\n          setAlertMessage={this.setAlertMessage}\r\n          {...this.props}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction AddAlert(props) {\r\n  if (props.showAlert) {\r\n    return (\r\n      <Alert\r\n        variant=\"danger\"\r\n        className=\"alert-fixed\"\r\n        onClose={props.onClose}\r\n        dismissible\r\n      >\r\n        {props.alertMessage}\r\n      </Alert>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction ExpenseTable(props) {\r\n  if (props.info[\"from\"] === \"izejvielas\") {\r\n    return (\r\n      <>\r\n        <TableTitle />\r\n        <IzejvielaTable {...props} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TableTitle />\r\n      <GeneralizedTable\r\n        headerNames={props.headerNames}\r\n        tableBody={<ExpenseTableBody {...props} />}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction buttonFormatter(cell, row, rowIndex, formatExtraData) {\r\n  console.log(formatExtraData.props);\r\n  return (\r\n    // <DeleteRawButton nosaukums={row.nosaukums} />\r\n    <AddExpenseButton\r\n      setAlertMessage={formatExtraData.props.setAlertMessage}\r\n      setShowAlert={formatExtraData.props.setShowAlert}\r\n      row={row}\r\n    />\r\n  );\r\n}\r\n\r\nfunction IzejvielaTable(props) {\r\n  const { SearchBar } = Search;\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"kods\",\r\n      text: \"Code\",\r\n      editable: false,\r\n      sort: true,\r\n      headerAlign: \"center\",\r\n      headerStyle: { width: \"80px\" },\r\n    },\r\n    {\r\n      dataField: \"nosaukums\",\r\n      text: \"Name\",\r\n      sort: true,\r\n      headerAlign: \"center\",\r\n      editable: false,\r\n    },\r\n    {\r\n      dataField: \"mervieniba\",\r\n      text: \"Measure\",\r\n      headerAlign: \"center\",\r\n      headerStyle: { width: \"12%\" },\r\n      editable: false,\r\n    },\r\n    {\r\n      dataField: \"cena\",\r\n      text: \"Price\",\r\n      sort: true,\r\n      headerAlign: \"center\",\r\n      headerStyle: { width: \"200px\" },\r\n      editable: false,\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Remove\",\r\n      headerAlign: \"center\",\r\n      headerStyle: { width: \"80px\" },\r\n      editable: false,\r\n      formatter: buttonFormatter,\r\n      formatExtraData: {\r\n        props: props,\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ToolkitProvider\r\n      keyField=\"nosaukums\"\r\n      data={props.expenses}\r\n      columns={columns}\r\n      search\r\n    >\r\n      {(props) => (\r\n        <div>\r\n          <h5>search:</h5>\r\n          <SearchBar\r\n            {...props.searchProps}\r\n            className=\"custom-search-field\"\r\n            placeholder=\"Найти\"\r\n            srText=\"\"\r\n          />\r\n          <hr />\r\n          <BootstrapTable\r\n            {...props.baseProps}\r\n            bootstrap4\r\n            striped\r\n            hover\r\n            condensed\r\n          />\r\n        </div>\r\n      )}\r\n    </ToolkitProvider>\r\n  );\r\n}\r\n\r\nfunction TableTitle() {\r\n  let title;\r\n  switch (info[\"from\"]) {\r\n    case \"izejvielas\":\r\n      title = \"Raw materials\";\r\n      break;\r\n    case \"fiksētie\":\r\n      title = \"Fixed costs\";\r\n      break;\r\n    case \"iepakojums\":\r\n      title = \"Package\";\r\n      break;\r\n    case \"darbinieki\":\r\n      title = \"Workers\";\r\n      break;\r\n    case \"ražošanas_grupas\":\r\n      title = \"Manufacturing groups\";\r\n      break;\r\n    default:\r\n      throw new Error('Unknown \"from\" entry');\r\n  }\r\n\r\n  return <h2>{title}</h2>;\r\n}\r\n\r\nfunction ExpenseTableBody(props) {\r\n  let componentList = [];\r\n  let component;\r\n  switch (info[\"from\"]) {\r\n    case \"izejvielas\":\r\n      component = <IzejvielaEntry {...props} />;\r\n      break;\r\n    case \"fiksētie\":\r\n      component = <FixedEntry {...props} />;\r\n      break;\r\n    case \"iepakojums\":\r\n      component = <PackageEntry {...props} />;\r\n      break;\r\n    case \"darbinieki\":\r\n      component = <WorkersEntry {...props} />;\r\n      break;\r\n    case \"ražošanas_grupas\":\r\n      component = <RazGrupasEntry {...props} />;\r\n      break;\r\n    default:\r\n      throw new Error('Unknown \"from\" entry');\r\n  }\r\n  // Make the list of components\r\n  props.expenses.forEach((item) => {\r\n    componentList.push(React.cloneElement(component, { item: item }));\r\n  });\r\n  return <tbody>{componentList}</tbody>;\r\n}\r\n\r\nfunction IzejvielaEntry(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.item.kods}</td>\r\n      <td>{props.item.nosaukums}</td>\r\n      <td>{props.item.mervieniba}</td>\r\n      <td>{props.item.cena}</td>\r\n      <td>\r\n        <AddExpenseButton {...props} />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction FixedEntry(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.item.nosaukums}</td>\r\n      <td>{props.item.cena}</td>\r\n      <td>\r\n        <AddExpenseButton {...props} />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction PackageEntry(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.item.kods}</td>\r\n      <td>{props.item.nosaukums}</td>\r\n      <td>{props.item.mervieniba}</td>\r\n      <td>{props.item.cena}</td>\r\n      <td>\r\n        <AddExpenseButton {...props} />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction WorkersEntry(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.item.nosaukums}</td>\r\n      <td>{props.item.alga.toFixed(globalSettings[\"floatPrecisionThird\"])}</td>\r\n      <td>\r\n        {props.item.alga_nodoklis.toFixed(\r\n          globalSettings[\"floatPrecisionThird\"]\r\n        )}\r\n      </td>\r\n      <td>\r\n        <AddExpenseButton {...props} />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction RazGrupasEntry(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.item.nosaukums}</td>\r\n      <td>\r\n        <AddExpenseButton {...props} />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction AddExpenseButton(props) {\r\n  function handleClick() {\r\n    let ObjAdd = {};\r\n\r\n    // Need to populate the entries with default data if\r\n    // the data is taken from the general list\r\n    if (info[\"type\"] === \"all\") {\r\n      switch (info[\"from\"]) {\r\n        case \"izejvielas\":\r\n          ObjAdd = {\r\n            kods: props.row.kods,\r\n            nosaukums: props.row.nosaukums,\r\n            mervieniba: props.row.mervieniba,\r\n            cena: props.row.cena,\r\n            daudzums: 1,\r\n            kopuma: props.row.cena,\r\n          };\r\n          break;\r\n        case \"fiksētie\":\r\n          ObjAdd = { nosaukums: props.item.nosaukums, cena: props.item.cena };\r\n          break;\r\n        case \"udens_sagatavosana\":\r\n          ObjAdd = { nosaukums: props.item.nosaukums, cena: props.item.cena };\r\n\r\n          break;\r\n        case \"iepakojums\":\r\n          ObjAdd = {\r\n            kods: props.item.kods,\r\n            nosaukums: props.item.nosaukums,\r\n            mervieniba: props.item.mervieniba,\r\n            cena: props.item.cena,\r\n            norma: 1,\r\n            summa_iepak: props.item.cena,\r\n            summa_vien: props.item.cena,\r\n          };\r\n          break;\r\n        case \"darbinieki\":\r\n          let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n          let daudzums = lodash\r\n            .chain(data)\r\n            .get(info[\"to\"])\r\n            .find({ nosaukums: destinationEntryName })\r\n            .get(\"ražošanas_grupas\")\r\n            .find({ nosaukums: info[\"raz_grupas_nosaukums\"] })\r\n            .get(\"daudzums\")\r\n            .value();\r\n\r\n          ObjAdd = {\r\n            nosaukums: props.item.nosaukums,\r\n            alga: props.item.alga,\r\n            alga_nodoklis: props.item.alga_nodoklis,\r\n            norma: 1,\r\n            summa: props.item.alga_nodoklis,\r\n            summa_vien: props.item.alga_nodoklis / daudzums,\r\n          };\r\n          break;\r\n        default:\r\n          throw new Error('Unknown \"from\" entry');\r\n      }\r\n    } else if (info[\"type\"] === \"group\") {\r\n      ObjAdd = props.item;\r\n    }\r\n\r\n    let data = addExpenseToFile(destinationEntryName);\r\n\r\n    function addExpenseToFile(destinationEntryName) {\r\n      let data;\r\n      if (info[\"from\"] === \"iepakojums\") {\r\n        let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n        let array = lodash\r\n          .chain(data)\r\n          .get(info[\"to\"])\r\n          .find({ nosaukums: destinationEntryName })\r\n          .get(\"iepakojums\")\r\n          .get(\"elementi\");\r\n\r\n        if (array.find({ nosaukums: ObjAdd.nosaukums }).value() === undefined) {\r\n          // Add the object to array\r\n          array.push(ObjAdd).value();\r\n          ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n        } else {\r\n          return \"Already in the list\";\r\n        }\r\n      } else if (info[\"from\"] === \"darbinieki\") {\r\n        let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n        let array = lodash\r\n          .chain(data)\r\n          .get(info[\"to\"])\r\n          .find({ nosaukums: destinationEntryName })\r\n          .get(\"ražošanas_grupas\")\r\n          .find({ nosaukums: info[\"raz_grupas_nosaukums\"] })\r\n          .get(\"darbinieki\");\r\n\r\n        if (array.find({ nosaukums: ObjAdd.nosaukums }).value() === undefined) {\r\n          // Add the object to array\r\n          array.push(ObjAdd).value();\r\n          ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n        } else {\r\n          return \"Already in the list\";\r\n        }\r\n      } else {\r\n        data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n        let array = lodash\r\n          .chain(data)\r\n          .get(info[\"to\"])\r\n          .find({ nosaukums: destinationEntryName })\r\n          .get(info[\"from\"]);\r\n\r\n        // If object is not in the list\r\n        if (array.find({ nosaukums: ObjAdd.nosaukums }).value() === undefined) {\r\n          // Add the object to array\r\n          array.push(ObjAdd).value();\r\n          ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n        } else {\r\n          return \"Already in the list\";\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    if (data === \"Already in the list\") {\r\n      let message = \"\";\r\n      switch (info[\"from\"]) {\r\n        case \"izejvielas\":\r\n          message =\r\n            'Raw material \"' + props.row.nosaukums + '\" already in the list';\r\n          break;\r\n        case \"fiksētie\":\r\n          message =\r\n            'Fixed cost \"' + props.item.nosaukums + '\" already in the list';\r\n          break;\r\n        case \"iepakojums\":\r\n          message =\r\n            'Package element \"' +\r\n            props.item.nosaukums +\r\n            '\" already in the list';\r\n          break;\r\n        case \"darbinieki\":\r\n          message = 'Worker \"' + props.item.nosaukums + '\" already in the list';\r\n          break;\r\n        case \"ražošanas_grupas\":\r\n          message =\r\n            'Manufacturing group \"' +\r\n            props.item.nosaukums +\r\n            '\" already in the list';\r\n          break;\r\n        default:\r\n          throw new Error('Unknown \"from\" entry');\r\n      }\r\n      props.setAlertMessage(message);\r\n      props.setShowAlert(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Button variant=\"success\" type=\"button\" size=\"sm\" onClick={handleClick}>\r\n      Add\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default AddExpensesPage;\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport AddNewItemButton from \"../AddNewItemButton\";\r\nimport GeneralizedTable from \"../GeneralizedTable\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction PackageAllPage() {\r\n  let headerNames = [\"Code\", \"Name\", \"Measure\", \"Price\", \"Remove\"];\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <h3 className=\"text-center\">Package</h3>\r\n      <GeneralizedTable headerNames={headerNames} tableBody={<TableBody />} />\r\n      <AddNewItemButton message={\"package:ask-for-window\"} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TableBody(props) {\r\n  // Get raw material data from main process\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n  data = lodash.chain(data).get(\"iepakojums\").value();\r\n\r\n  // Create the list\r\n  let itemList = [];\r\n\r\n  data.forEach((item) => {\r\n    itemList.push(\r\n      <tr key={item.nosaukums.toString()}>\r\n        <td>{item.kods}</td>\r\n        <td>{item.nosaukums}</td>\r\n        <td>{item.mervieniba}</td>\r\n        <td>\r\n          <Cena item={item} {...props} />\r\n        </td>\r\n        <td>\r\n          <DeleteRawButton nosaukums={item.nosaukums} {...props} />\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <tbody>{itemList}</tbody>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Cena(props) {\r\n  const [cena, setCena] = useState(parseFloat(props.item.cena));\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  function handleChange(event) {\r\n    setCena(event.target.value);\r\n  }\r\n  function handleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n    } else {\r\n      setValidated(false);\r\n      // Update the value\r\n      let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n      lodash\r\n        .chain(data)\r\n        .get(\"iepakojums\")\r\n        .find({ nosaukums: props.item.nosaukums })\r\n        .assign({ cena: parseFloat(cena) })\r\n        .value();\r\n\r\n      // We need to update the value everythere i.e. in all groups and all products\r\n      // which have this specific expense in the list\r\n\r\n      // Get all products\r\n      let productObjects = lodash.chain(data).get(\"produkti\").value();\r\n\r\n      // Get all grupas\r\n      let groupObjects = lodash.chain(data).get(\"grupas\").value();\r\n\r\n      productObjects.forEach((product) => {\r\n        // Get object\r\n        let iepakObj = lodash.chain(product).get(\"iepakojums\").value();\r\n\r\n        let daudzums = lodash.chain(iepakObj).get(\"daudzums\").value();\r\n\r\n        let element = lodash\r\n          .chain(iepakObj)\r\n          .get(\"elementi\")\r\n          .find({ nosaukums: props.item.nosaukums })\r\n          .value();\r\n\r\n        // If object exists\r\n        if (element !== undefined) {\r\n          let summa_iepak = cena * element[\"norma\"];\r\n          let summa_vien = summa_iepak / daudzums;\r\n\r\n          lodash\r\n            .chain(element)\r\n            .assign({ cena: parseFloat(cena) })\r\n            .assign({ summa_iepak: parseFloat(summa_iepak) })\r\n            .assign({ summa_vien: parseFloat(summa_vien) })\r\n            .value();\r\n        }\r\n      });\r\n\r\n      groupObjects.forEach((group) => {\r\n        // Get object\r\n        let iepakObj = lodash.chain(group).get(\"iepakojums\").value();\r\n\r\n        let daudzums = lodash.chain(iepakObj).get(\"daudzums\").value();\r\n\r\n        let element = lodash\r\n          .chain(iepakObj)\r\n          .get(\"elementi\")\r\n          .find({ nosaukums: props.item.nosaukums })\r\n          .value();\r\n\r\n        // If object exists\r\n        if (element !== undefined) {\r\n          let summa_iepak = cena * element[\"norma\"];\r\n          let summa_vien = summa_iepak / daudzums;\r\n\r\n          lodash\r\n            .chain(element)\r\n            .assign({ cena: parseFloat(cena) })\r\n            .assign({ summa_iepak: parseFloat(summa_iepak) })\r\n            .assign({ summa_vien: parseFloat(summa_vien) })\r\n            .value();\r\n        }\r\n      });\r\n\r\n      // Update data\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    }\r\n  }\r\n  return (\r\n    <Form noValidate validated={validated}>\r\n      <Form.Group>\r\n        <Form.Control\r\n          type=\"number\"\r\n          required\r\n          placeholder=\"Цена\"\r\n          value={cena}\r\n          onChange={handleChange}\r\n          onBlur={handleValidation}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          Введите цену\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction DeleteRawButton(props) {\r\n  function handleClick() {\r\n    let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n    ipcRenderer.send(\"warning-delete\");\r\n    ipcRenderer.on(\"confirm-delete\", (event, arg) => {\r\n      lodash\r\n        .chain(data)\r\n        .get(\"iepakojums\")\r\n        .remove({ nosaukums: props.nosaukums })\r\n        .value();\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    });\r\n  }\r\n  return (\r\n    <Button variant=\"danger\" size=\"sm\" onClick={handleClick}>\r\n      remove\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default PackageAllPage;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\n// import globalSettings from './../globalSettings';\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nclass PackageAddPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kods: \"\",\r\n      nosaukums: \"\",\r\n      mervieniba: \"\",\r\n      cena: \"\",\r\n      showAlert: false,\r\n      alertMessage: \"\",\r\n    };\r\n\r\n    this.data = {};\r\n\r\n    this.handleKodsChange = this.handleKodsChange.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleMervienibaChange = this.handleMervienibaChange.bind(this);\r\n    this.handlePriceChange = this.handlePriceChange.bind(this);\r\n\r\n    this.setShowAlert = this.setShowAlert.bind(this);\r\n    this.setAlertMessage = this.setAlertMessage.bind(this);\r\n  }\r\n\r\n  handleKodsChange(event) {\r\n    this.setState({ kods: event.target.value });\r\n  }\r\n  handleNameChange(event) {\r\n    this.setState({ nosaukums: event.target.value });\r\n  }\r\n  handleMervienibaChange(event) {\r\n    console.log(event.target.value);\r\n    this.setState({ mervieniba: event.target.value });\r\n  }\r\n  handlePriceChange(event) {\r\n    this.setState({ cena: event.target.value });\r\n  }\r\n  setShowAlert(value) {\r\n    this.setState({ showAlert: value });\r\n  }\r\n  setAlertMessage(value) {\r\n    this.setState({ alertMessage: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputAlert\r\n          showAlert={this.state.showAlert}\r\n          alertMessage={this.state.alertMessage}\r\n          onClose={() => this.setShowAlert(false)}\r\n        />\r\n        <InputForm\r\n          kods={this.state.kods}\r\n          nosaukums={this.state.nosaukums}\r\n          mervieniba={this.state.mervieniba}\r\n          cena={this.state.cena}\r\n          handleKodsChange={this.handleKodsChange}\r\n          handleMervienibaChange={this.handleMervienibaChange}\r\n          handleNameChange={this.handleNameChange}\r\n          handlePriceChange={this.handlePriceChange}\r\n          setShowAlert={this.setShowAlert}\r\n          setAlertMessage={this.setAlertMessage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction InputAlert(props) {\r\n  if (props.showAlert) {\r\n    return (\r\n      <Alert variant=\"danger\" onClose={props.onClose} dismissible>\r\n        {props.alertMessage}\r\n      </Alert>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction isNumeric(str) {\r\n  if (typeof str != \"string\") return false; // we only process strings!\r\n  return (\r\n    !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\r\n    !isNaN(parseFloat(str))\r\n  ); // ...and ensure strings of whitespace fail\r\n}\r\n\r\nclass InputForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    this.data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n    this.data = lodash.chain(this.data).get(\"iepakojums\").value();\r\n\r\n    // Check if empty\r\n    if (\r\n      this.props.nosaukums === \"\" ||\r\n      this.props.cena === \"\" ||\r\n      this.props.kods === \"\" ||\r\n      this.props.mervieniba === \"\"\r\n    ) {\r\n      this.props.setShowAlert(true);\r\n      this.props.setAlertMessage(\"Enter the  data\");\r\n    } else {\r\n      // Check if element already exists\r\n      let element = this.data.find(\r\n        (element) => element.nosaukums === this.props.nosaukums\r\n      );\r\n      if (typeof element != \"undefined\") {\r\n        this.props.setShowAlert(true);\r\n        this.props.setAlertMessage(\r\n          `Raw material with name \"${this.props.nosaukums}\" already exists`\r\n        );\r\n        // Check if price is written correctly\r\n      } else if (!isNumeric(this.props.cena)) {\r\n        this.props.setShowAlert(true);\r\n        this.props.setAlertMessage(`Price entered has wrong format`);\r\n      } else if (!isNumeric(this.props.kods)) {\r\n        this.props.setShowAlert(true);\r\n        this.props.setAlertMessage(`Code entered has wrong format`);\r\n      } else {\r\n        let paramObj = {\r\n          kods: parseInt(this.props.kods),\r\n          nosaukums: this.props.nosaukums,\r\n          mervieniba: this.props.mervieniba,\r\n          cena: parseFloat(this.props.cena),\r\n        };\r\n\r\n        let tempData = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n        lodash.chain(tempData).get(\"iepakojums\").push(paramObj).value();\r\n        ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(tempData)]);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\r\n          <Form.Label>Code</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"e.g. 53\"\r\n            value={this.props.kods}\r\n            onChange={this.props.handleKodsChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"e.g. water\"\r\n            value={this.props.nosaukums}\r\n            onChange={this.props.handleNameChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\r\n          <Form.Label>Measure</Form.Label>\r\n          <Form.Select\r\n            aria-label=\"Default select example\"\r\n            value={this.props.mervieniba}\r\n            onChange={this.props.handleMervienibaChange}\r\n          >\r\n            <option value=\"\">Measure</option>\r\n            <option value=\"kg\">kg</option>\r\n            <option value=\"gab\">pcs</option>\r\n            <option value=\"l\">l</option>\r\n          </Form.Select>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formGroupPrice\">\r\n          <Form.Label>Price for unit</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"e.g. 5.42\"\r\n            value={this.props.cena}\r\n            onChange={this.props.handlePriceChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PackageAddPage;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\n// import globalSettings from '../globalSettings';\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nclass WorkersAddPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nosaukums: \"\",\r\n      alga: \"\",\r\n      showAlert: false,\r\n      alertMessage: \"\",\r\n    };\r\n\r\n    this.data = {};\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleAlgaChange = this.handleAlgaChange.bind(this);\r\n\r\n    this.setShowAlert = this.setShowAlert.bind(this);\r\n    this.setAlertMessage = this.setAlertMessage.bind(this);\r\n  }\r\n\r\n  handleNameChange(event) {\r\n    this.setState({ nosaukums: event.target.value });\r\n  }\r\n  handleAlgaChange(event) {\r\n    this.setState({ alga: event.target.value });\r\n  }\r\n\r\n  setShowAlert(value) {\r\n    this.setState({ showAlert: value });\r\n  }\r\n  setAlertMessage(value) {\r\n    this.setState({ alertMessage: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputAlert\r\n          showAlert={this.state.showAlert}\r\n          alertMessage={this.state.alertMessage}\r\n          onClose={() => this.setShowAlert(false)}\r\n        />\r\n        <InputForm\r\n          nosaukums={this.state.nosaukums}\r\n          alga={this.state.alga}\r\n          handleNameChange={this.handleNameChange}\r\n          handleAlgaChange={this.handleAlgaChange}\r\n          setShowAlert={this.setShowAlert}\r\n          setAlertMessage={this.setAlertMessage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction InputAlert(props) {\r\n  if (props.showAlert) {\r\n    return (\r\n      <Alert variant=\"danger\" onClose={props.onClose} dismissible>\r\n        {props.alertMessage}\r\n      </Alert>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction isNumeric(str) {\r\n  if (typeof str != \"string\") return false; // we only process strings!\r\n  return (\r\n    !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\r\n    !isNaN(parseFloat(str))\r\n  ); // ...and ensure strings of whitespace fail\r\n}\r\n\r\nclass InputForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    this.data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n    let nodoklis = lodash.chain(this.data).get(\"darbinieku_nodoklis\").value();\r\n\r\n    this.data = lodash.chain(this.data).get(\"darbinieki\").value();\r\n\r\n    // Check if empty\r\n    if (this.props.nosaukums === \"\" || this.props.alga === \"\") {\r\n      this.props.setShowAlert(true);\r\n      this.props.setAlertMessage(\"Enter the data\");\r\n    } else {\r\n      // Check if element already exists\r\n      let element = this.data.find(\r\n        (element) => element.nosaukums === this.props.nosaukums\r\n      );\r\n      if (typeof element != \"undefined\") {\r\n        this.props.setShowAlert(true);\r\n        this.props.setAlertMessage(\r\n          `Worker with title\"${this.props.nosaukums}\" already exists`\r\n        );\r\n        // Check if price is written correctly\r\n      } else if (!isNumeric(this.props.alga)) {\r\n        this.props.setShowAlert(true);\r\n        this.props.setAlertMessage(`Hourly rate entered has wrong format`);\r\n      } else {\r\n        let alga = parseFloat(this.props.alga);\r\n        let alga_procents = (alga * nodoklis) / 100;\r\n        let alga_nodoklis = alga + alga_procents;\r\n\r\n        let paramObj = {\r\n          nosaukums: this.props.nosaukums,\r\n          alga: alga,\r\n          alga_procents: alga_procents,\r\n          alga_nodoklis: alga_nodoklis,\r\n        };\r\n\r\n        let tempData = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n        lodash.chain(tempData).get(\"darbinieki\").push(paramObj).value();\r\n        ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(tempData)]);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"e.g. engineer\"\r\n            value={this.props.nosaukums}\r\n            onChange={this.props.handleNameChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formGroupPrice\">\r\n          <Form.Label>Hourly rate</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"e.g. 12\"\r\n            value={this.props.alga}\r\n            onChange={this.props.handleAlgaChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkersAddPage;\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport AddNewItemButton from \"../AddNewItemButton\";\r\nimport GeneralizedTable from \"../GeneralizedTable\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\n\r\nimport \"../App.css\";\r\n\r\nimport globalSettings from \"../globalSettings\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction WorkersAllPage() {\r\n  let headerNames = [\"Name\", \"Salary\", \"% Fraction\", \"Sum\", \"Remove\"];\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <h3 className=\"text-center\">Workers list</h3>\r\n      <Nodoklis />\r\n      <GeneralizedTable headerNames={headerNames} tableBody={<TableBody />} />\r\n      <AddNewItemButton message={\"workers:ask-for-window\"} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Nodoklis(props) {\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n  const [nodoklis, setNodoklis] = useState(data[\"darbinieku_nodoklis\"]);\r\n  const [nodoklisValidated, setNodoklisValidated] = useState(false);\r\n\r\n  function handleChange(event) {\r\n    setNodoklis(event.target.value);\r\n  }\r\n\r\n  function handleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setNodoklisValidated(true);\r\n    } else {\r\n      setNodoklisValidated(false);\r\n      // Update the values\r\n      let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n      data[\"darbinieku_nodoklis\"] = nodoklis;\r\n      let darbinieki = data[\"darbinieki\"];\r\n\r\n      // Get all products\r\n      let productObjects = lodash.chain(data).get(\"produkti\").value();\r\n\r\n      // Get all grupas\r\n      let groupObjects = lodash.chain(data).get(\"grupas\").value();\r\n\r\n      darbinieki.forEach((item) => {\r\n        // Update data in the general list\r\n        item[\"alga_procents\"] = (item[\"alga\"] * nodoklis) / 100;\r\n        item[\"alga_nodoklis\"] = item[\"alga\"] + item[\"alga_procents\"];\r\n\r\n        // Update the alga for each darbinieks everywhere\r\n        productObjects.forEach((product) => {\r\n          // Get object\r\n          let razGrupas = lodash.chain(product).get(\"ražošanas_grupas\").value();\r\n\r\n          razGrupas.forEach((razGroup) => {\r\n            let daudzums = razGroup[\"daudzums\"];\r\n            let darbinieks = lodash\r\n              .chain(razGroup)\r\n              .get(\"darbinieki\")\r\n              .find({ nosaukums: item.nosaukums })\r\n              .value();\r\n\r\n            // If object exists\r\n            if (darbinieks !== undefined) {\r\n              // Update the workers data in the product or group\r\n              darbinieks[\"alga_nodoklis\"] = item[\"alga_nodoklis\"];\r\n              darbinieks[\"summa\"] = item[\"alga_nodoklis\"] * darbinieks[\"norma\"];\r\n              darbinieks[\"summa_vien\"] = darbinieks[\"summa\"] / daudzums;\r\n            }\r\n          });\r\n        });\r\n      });\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={nodoklisValidated}>\r\n        <Form.Group>\r\n          <Form.Label>Salary tax(%)</Form.Label>\r\n          <Form.Control\r\n            id=\"daudzums\"\r\n            type=\"number\"\r\n            required\r\n            placeholder=\"Кол-во\"\r\n            value={nodoklis}\r\n            onChange={handleChange}\r\n            onBlur={handleValidation}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Введите налог\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TableBody(props) {\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n  data = lodash.chain(data).get(\"darbinieki\").value();\r\n\r\n  // Create the list\r\n  let itemList = [];\r\n\r\n  data.forEach((item) => {\r\n    itemList.push(\r\n      <tr key={item.nosaukums.toString()}>\r\n        <td>{item.nosaukums}</td>\r\n        <td>\r\n          <Alga item={item} {...props} />\r\n        </td>\r\n        <td>\r\n          {item.alga_procents.toFixed(\r\n            globalSettings[\"floatPrecisionSecondary\"]\r\n          )}\r\n        </td>\r\n        <td>\r\n          {item.alga_nodoklis.toFixed(\r\n            globalSettings[\"floatPrecisionSecondary\"]\r\n          )}\r\n        </td>\r\n        <td>\r\n          <DeleteButton nosaukums={item.nosaukums} {...props} />\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <tbody>{itemList}</tbody>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Alga(props) {\r\n  const [alga, setAlga] = useState(parseFloat(props.item.alga));\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  function handleChange(event) {\r\n    setAlga(event.target.value);\r\n  }\r\n  function handleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n    } else {\r\n      setValidated(false);\r\n      // Update the value\r\n      let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n      let nodoklis = data[\"darbinieku_nodoklis\"];\r\n\r\n      let darbinieksObj = lodash\r\n        .chain(data)\r\n        .get(\"darbinieki\")\r\n        .find({ nosaukums: props.item.nosaukums })\r\n        .value();\r\n\r\n      darbinieksObj[\"alga\"] = parseFloat(alga);\r\n      darbinieksObj[\"alga_procents\"] = (darbinieksObj[\"alga\"] * nodoklis) / 100;\r\n      darbinieksObj[\"alga_nodoklis\"] =\r\n        darbinieksObj[\"alga\"] + darbinieksObj[\"alga_procents\"];\r\n\r\n      // We need to update the value everythere i.e. in all groups and all products\r\n      // which have this specific expense in the list\r\n\r\n      // Get all products\r\n      let productObjects = lodash.chain(data).get(\"produkti\").value();\r\n\r\n      // Get all grupas\r\n      let groupObjects = lodash.chain(data).get(\"grupas\").value();\r\n\r\n      productObjects.forEach((product) => {\r\n        // Get object\r\n        let razGrupas = lodash.chain(product).get(\"ražošanas_grupas\").value();\r\n\r\n        razGrupas.forEach((razGroup) => {\r\n          let daudzums = razGroup[\"daudzums\"];\r\n\r\n          let darbinieks = lodash\r\n            .chain(razGroup)\r\n            .get(\"darbinieki\")\r\n            .find({ nosaukums: props.item.nosaukums })\r\n            .value();\r\n\r\n          // If object exists\r\n          if (darbinieks !== undefined) {\r\n            darbinieks[\"alga\"] = darbinieksObj[\"alga\"];\r\n            darbinieks[\"alga_nodoklis\"] = darbinieksObj[\"alga_nodoklis\"];\r\n            darbinieks[\"summa\"] =\r\n              darbinieks[\"alga_nodoklis\"] * darbinieks[\"norma\"];\r\n            darbinieks[\"summa_vien\"] = darbinieks[\"summa\"] / daudzums;\r\n          }\r\n        });\r\n      });\r\n      // Update data\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    }\r\n  }\r\n  return (\r\n    <Form noValidate validated={validated}>\r\n      <Form.Group>\r\n        <Form.Control\r\n          type=\"number\"\r\n          required\r\n          placeholder=\"Цена\"\r\n          value={alga}\r\n          onChange={handleChange}\r\n          onBlur={handleValidation}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          Введите ставку\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction DeleteButton(props) {\r\n  function handleClick() {\r\n    let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n    ipcRenderer.send(\"warning-delete\");\r\n    ipcRenderer.on(\"confirm-delete\", (event, arg) => {\r\n      lodash\r\n        .chain(data)\r\n        .get(\"darbinieki\")\r\n        .remove({ nosaukums: props.nosaukums })\r\n        .value();\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n    });\r\n  }\r\n  return (\r\n    <Button variant=\"danger\" size=\"sm\" onClick={handleClick}>\r\n      remove\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default WorkersAllPage;\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport GeneralizedTable from \"../GeneralizedTable\";\r\nimport globalSettings from \"../globalSettings\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction Electricity() {\r\n  let headerNames = [\"Name\", \"Value\"];\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <h3 className=\"text-center\">Electricity price</h3>\r\n      <GeneralizedTable\r\n        headerNames={headerNames}\r\n        tableBody={<ElectricityTableBody />}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction productUpdate(vien_summa) {\r\n  let tempData = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n  // Price per each product must be updated for each product\r\n  let productObjects = lodash.chain(tempData).get(\"produkti\").value();\r\n\r\n  productObjects.forEach((product) => {\r\n    let elektribaObj = product[\"elektriba\"];\r\n    elektribaObj[\"vien_summa\"] = vien_summa;\r\n    elektribaObj[\"summa\"] =\r\n      elektribaObj[\"vien_summa\"] * elektribaObj[\"vien_daudzums\"];\r\n  });\r\n\r\n  // Update data\r\n  ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(tempData)]);\r\n}\r\n\r\nfunction ElectricityTableBody(props) {\r\n  // Get electricity data from main process\r\n\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n  let electricityGeneral = lodash.chain(data).get(\"elektriba\").value();\r\n\r\n  const [cena, setCena] = useState(parseFloat(electricityGeneral[\"cena\"]));\r\n  const [cenaValidated, setCenaValidated] = useState(false);\r\n\r\n  const [izlietota, setIzlietota] = useState(electricityGeneral[\"izlietota\"]);\r\n  const [izlietotaValidated, setIzlietotaValidated] = useState(false);\r\n\r\n  const [daudzums, setDaudzums] = useState(electricityGeneral[\"vien_daudzums\"]);\r\n  const [daudzumsValidated, setDaudzumsValidated] = useState(false);\r\n\r\n  const [summa, setSumma] = useState(parseFloat(electricityGeneral[\"summa\"]));\r\n  const [summaValidated, setSummaValidated] = useState(false);\r\n\r\n  const [vienSumma, setVienSumma] = useState(\r\n    parseFloat(electricityGeneral[\"vien_summa\"])\r\n  );\r\n  const [vienSummaValidated, setVienSummaValidated] = useState(false);\r\n\r\n  function cenaHandleChange(event) {\r\n    setCena(event.target.value);\r\n  }\r\n\r\n  function izlietotaHandleChange(event) {\r\n    setIzlietota(event.target.value);\r\n  }\r\n\r\n  function daudzumsHandleChange(event) {\r\n    setDaudzums(event.target.value);\r\n  }\r\n\r\n  function summaHandleChange(event) {\r\n    setSumma(event.target.value);\r\n  }\r\n\r\n  function vienSummaHandleChange(event) {\r\n    setVienSumma(event.target.value);\r\n  }\r\n\r\n  function cenaHandleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setCenaValidated(true);\r\n    } else {\r\n      setCenaValidated(false);\r\n      // We need to calculate the cost of electricity for one product\r\n      // i.e. recalculate the total price (total electricity * cena)\r\n      // And then price per each product (total price / products created)\r\n      electricityGeneral[\"cena\"] = parseFloat(cena);\r\n      electricityGeneral[\"summa\"] =\r\n        electricityGeneral[\"izlietota\"] * electricityGeneral[\"cena\"];\r\n      electricityGeneral[\"vien_summa\"] =\r\n        electricityGeneral[\"summa\"] / electricityGeneral[\"vien_daudzums\"];\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n\r\n      productUpdate(electricityGeneral[\"vien_summa\"]);\r\n    }\r\n  }\r\n\r\n  function izlietotaHandleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setIzlietotaValidated(true);\r\n    } else {\r\n      setIzlietotaValidated(false);\r\n      // Update the value\r\n      electricityGeneral[\"izlietota\"] = parseFloat(izlietota);\r\n      electricityGeneral[\"summa\"] =\r\n        electricityGeneral[\"izlietota\"] * electricityGeneral[\"cena\"];\r\n      electricityGeneral[\"vien_summa\"] =\r\n        electricityGeneral[\"summa\"] / electricityGeneral[\"vien_daudzums\"];\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n\r\n      productUpdate(electricityGeneral[\"vien_summa\"]);\r\n    }\r\n  }\r\n\r\n  function daudzumsHandleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setDaudzumsValidated(true);\r\n    } else {\r\n      setDaudzumsValidated(false);\r\n      // Update the value\r\n      electricityGeneral[\"vien_daudzums\"] = parseFloat(daudzums);\r\n      electricityGeneral[\"vien_summa\"] =\r\n        electricityGeneral[\"summa\"] / electricityGeneral[\"vien_daudzums\"];\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n\r\n      productUpdate(electricityGeneral[\"vien_summa\"]);\r\n    }\r\n  }\r\n\r\n  function summaHandleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setSummaValidated(true);\r\n    } else {\r\n      setSummaValidated(false);\r\n      // Update the value\r\n      electricityGeneral[\"summa\"] = parseFloat(summa);\r\n      electricityGeneral[\"vien_summa\"] =\r\n        electricityGeneral[\"summa\"] / electricityGeneral[\"vien_daudzums\"];\r\n      electricityGeneral[\"izlietota\"] =\r\n        electricityGeneral[\"summa\"] / electricityGeneral[\"cena\"];\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n\r\n      productUpdate(electricityGeneral[\"vien_summa\"]);\r\n    }\r\n  }\r\n\r\n  function vienSummaHandleValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setVienSummaValidated(true);\r\n    } else {\r\n      setVienSummaValidated(false);\r\n      // Update the value\r\n      electricityGeneral[\"vien_summa\"] = parseFloat(vienSumma);\r\n      electricityGeneral[\"summa\"] =\r\n        electricityGeneral[\"vien_summa\"] * electricityGeneral[\"vien_daudzums\"];\r\n      electricityGeneral[\"izlietota\"] =\r\n        electricityGeneral[\"summa\"] / electricityGeneral[\"cena\"];\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n\r\n      productUpdate(electricityGeneral[\"vien_summa\"]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tbody>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"col-md-3 text-end\">Price per kW:</td>\r\n          <td>\r\n            <Form noValidate validated={cenaValidated}>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  required\r\n                  placeholder=\"e.g. 200\"\r\n                  value={cena}\r\n                  onChange={cenaHandleChange}\r\n                  onBlur={cenaHandleValidation}\r\n                  style={{ width: \"200px\", height: \"30px\" }}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  enter the price\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n          </td>\r\n          {/* <td className=\"col-md-6\">{electricityObj[\"cena\"].toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td> */}\r\n        </tr>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"text-end\">kWh spent:</td>\r\n          <td>\r\n            <Form noValidate validated={izlietotaValidated}>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  required\r\n                  placeholder=\"e.g. 200\"\r\n                  value={izlietota}\r\n                  onChange={izlietotaHandleChange}\r\n                  onBlur={izlietotaHandleValidation}\r\n                  style={{ width: \"200px\", height: \"30px\" }}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  enter the number\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n          </td>\r\n        </tr>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"text-end\">Units produced:</td>\r\n          <td>\r\n            <Form noValidate validated={daudzumsValidated}>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  required\r\n                  placeholder=\"e.g. 10000\"\r\n                  value={daudzums}\r\n                  onChange={daudzumsHandleChange}\r\n                  onBlur={daudzumsHandleValidation}\r\n                  style={{ width: \"200px\", height: \"30px\" }}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  enter the number\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n          </td>\r\n        </tr>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"text-end\">Electricity bill:</td>\r\n          {/* <td>{electricityGeneral[\"summa\"].toFixed(globalSettings[\"floatPrecisionSecondary\"])}</td> */}\r\n          <td>\r\n            <Form noValidate validated={summaValidated}>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  required\r\n                  placeholder=\"\"\r\n                  value={summa}\r\n                  onChange={summaHandleChange}\r\n                  onBlur={summaHandleValidation}\r\n                  style={{ width: \"200px\", height: \"30px\" }}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Введите количество\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n          </td>\r\n        </tr>\r\n        <tr className=\"align-middle \">\r\n          <td className=\"text-end\">Price/unit:</td>\r\n          <td>\r\n            <Form noValidate validated={vienSummaValidated}>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  required\r\n                  placeholder=\"e.g. 0.3\"\r\n                  value={vienSumma}\r\n                  onChange={vienSummaHandleChange}\r\n                  onBlur={vienSummaHandleValidation}\r\n                  style={{ width: \"200px\", height: \"30px\" }}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Введите количество\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Electricity;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// import globalSettings from '../globalSettings';\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction RazGrupasAddPage(props) {\r\n  let { productName, type } = useParams();\r\n\r\n  return <RazGrupasAddClass productName={productName} type={type} />;\r\n}\r\n\r\nclass RazGrupasAddClass extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nosaukums: \"\",\r\n      alga: \"\",\r\n      showAlert: false,\r\n      alertMessage: \"\",\r\n    };\r\n\r\n    this.data = {};\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n\r\n    this.setShowAlert = this.setShowAlert.bind(this);\r\n    this.setAlertMessage = this.setAlertMessage.bind(this);\r\n  }\r\n\r\n  handleNameChange(event) {\r\n    this.setState({ nosaukums: event.target.value });\r\n  }\r\n\r\n  setShowAlert(value) {\r\n    this.setState({ showAlert: value });\r\n  }\r\n  setAlertMessage(value) {\r\n    this.setState({ alertMessage: value });\r\n  }\r\n\r\n  render(props) {\r\n    return (\r\n      <>\r\n        <InputAlert\r\n          showAlert={this.state.showAlert}\r\n          alertMessage={this.state.alertMessage}\r\n          onClose={() => this.setShowAlert(false)}\r\n        />\r\n        <InputForm\r\n          nosaukums={this.state.nosaukums}\r\n          handleNameChange={this.handleNameChange}\r\n          setShowAlert={this.setShowAlert}\r\n          setAlertMessage={this.setAlertMessage}\r\n          {...this.props}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction InputAlert(props) {\r\n  if (props.showAlert) {\r\n    return (\r\n      <Alert variant=\"danger\" onClose={props.onClose} dismissible>\r\n        {props.alertMessage}\r\n      </Alert>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nclass InputForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    this.data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n    this.data = lodash\r\n      .chain(this.data)\r\n      .get(this.props.type)\r\n      .find({ nosaukums: this.props.productName })\r\n      .get(\"ražošanas_grupas\")\r\n      .value();\r\n\r\n    // Check if empty\r\n    if (this.props.nosaukums === \"\") {\r\n      this.props.setShowAlert(true);\r\n      this.props.setAlertMessage(\"Enter the data\");\r\n    } else {\r\n      // Check if element already exists\r\n      let element = this.data.find(\r\n        (element) => element.nosaukums === this.props.nosaukums\r\n      );\r\n      if (typeof element != \"undefined\") {\r\n        this.props.setShowAlert(true);\r\n        this.props.setAlertMessage(\r\n          `Manufacturing group \"${this.props.nosaukums}\" already exists`\r\n        );\r\n        // Check if price is written correctly\r\n      } else {\r\n        let paramObj = {\r\n          nosaukums: this.props.nosaukums,\r\n          daudzums: 1,\r\n          darbinieki: [],\r\n        };\r\n\r\n        let tempData = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n        lodash\r\n          .chain(tempData)\r\n          .get(this.props.type)\r\n          .find({ nosaukums: this.props.productName })\r\n          .get(\"ražošanas_grupas\")\r\n          .push(paramObj)\r\n          .value();\r\n        ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(tempData)]);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"e.g. main production line\"\r\n            value={this.props.nosaukums}\r\n            onChange={this.props.handleNameChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RazGrupasAddPage;\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport GeneralizedTable from \"../GeneralizedTable\";\r\nimport globalSettings from \"../globalSettings\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\nconst lodash = require(\"lodash\");\r\n\r\nfunction AlcoholTax() {\r\n  let headerNames = [\"Name\", \"Value\"];\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <h3 className=\"text-center\">Excise</h3>\r\n      <GeneralizedTable\r\n        headerNames={headerNames}\r\n        tableBody={<ElectricityTableBody />}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction productUpdate(value) {\r\n  let tempData = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n  // Price per each product must be updated for each product\r\n  // that contains tax for the alcohol\r\n  let productObjects = lodash.chain(tempData).get(\"produkti\").value();\r\n\r\n  productObjects.forEach((product) => {\r\n    let obj = product[\"alcohol_tax\"];\r\n    if (obj != null) {\r\n      obj[\"value\"] = value;\r\n      obj[\"summa\"] = ((obj[\"value\"] * obj[\"alcohol\"]) / 100) * obj[\"volume\"];\r\n    }\r\n  });\r\n\r\n  // Update data\r\n  ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(tempData)]);\r\n}\r\n\r\nfunction ElectricityTableBody(props) {\r\n  // Get electricity data from main process\r\n  let data = JSON.parse(ipcRenderer.sendSync(\"get-data\"));\r\n\r\n  const [alcoholTax, setAlcoholTax] = useState(parseFloat(data[\"alcohol_tax\"]));\r\n  const [alcoholTaxValidated, setAlcoholTaxValidated] = useState(false);\r\n\r\n  function alcoholTaxHandleChange(event) {\r\n    setAlcoholTax(event.target.value);\r\n  }\r\n\r\n  function alcoholTaxValidation(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setAlcoholTaxValidated(true);\r\n    } else {\r\n      setAlcoholTaxValidated(false);\r\n      // We need to calculate the cost of electricity for one product\r\n      // i.e. recalculate the total price (total electricity * cena)\r\n      // And then price per each product (total price / products created)\r\n      data[\"alcohol_tax\"] = parseFloat(alcoholTax);\r\n\r\n      ipcRenderer.sendSync(\"modify-data\", [JSON.stringify(data)]);\r\n\r\n      productUpdate(data[\"alcohol_tax\"]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tbody>\r\n        <tr className=\"align-middle\">\r\n          <td className=\"col-md-3 text-end\">Excise (for 1% alk. per 100l):</td>\r\n          <td>\r\n            <Form noValidate validated={alcoholTaxValidated}>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  required\r\n                  placeholder=\"Акциз (за 1 градус на 100л)\"\r\n                  value={alcoholTax}\r\n                  onChange={alcoholTaxHandleChange}\r\n                  onBlur={alcoholTaxValidation}\r\n                  style={{ width: \"200px\", height: \"30px\" }}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Введите акциз\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AlcoholTax;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// import Form from 'react-bootstrap/Form';\r\nimport Button from \"react-bootstrap/Button\";\r\n// import Alert from 'react-bootstrap/Alert';\r\n\r\nconst { ipcRenderer } = window.require(\"electron\");\r\n// const lodash = require('lodash');\r\n\r\nfunction WarningDelete(props) {\r\n  function handleDelete() {\r\n    ipcRenderer.send(\"confirm-delete\");\r\n  }\r\n\r\n  function handleCancel() {\r\n    ipcRenderer.send(\"cancel-delete\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Delete the element</h1>\r\n      <h3>Are you sure you want to delete this element?</h3>\r\n      <Button variant=\"secondary\" size=\"sm\" onClick={handleCancel}>\r\n        cancel\r\n      </Button>\r\n      <Button variant=\"danger\" size=\"sm\" onClick={handleDelete}>\r\n        delete\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WarningDelete;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport  { useState } from 'react';\r\n\r\nfunction FileСhoice(props) {\r\n\r\n    const [ filePath, setFilePath] = useState(null);\r\n\r\n    function filePathHandleChange(event) {\r\n        setFilePath(event.target.value)\r\n    };\r\n\r\n    function handleClick() {\r\n        console.log(\"clicked!!!\");\r\n        console.log(filePath);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Form>\r\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                <Form.Label>Default file input example</Form.Label>\r\n                <Form.Control type=\"file\" onChange={filePathHandleChange}/>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"success\" type=\"button\" size=\"sm\" onClick={handleClick}>\r\n                Подтвердить\r\n            </Button>\r\n        </Form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default FileСhoice;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n// import './index.css';\r\n\r\nimport MainPage from \"./MainPage\";\r\nimport ProductPage from \"./ProductPage\";\r\nimport GroupPage from \"./GroupPage\";\r\n\r\nimport RawMaterialAllPage from \"./RawMaterial/RawMaterialAllPage\";\r\nimport RawMaterialAddPage from \"./RawMaterial/RawMaterialAddPage\";\r\n\r\nimport FixedCostAllAddPage from \"./FixedCost/FixedCostAllAddPage\";\r\nimport FixedCostAllPage from \"./FixedCost/FixedCostAllPage\";\r\n\r\nimport AddExpensesPage from \"./AddExpensesPage\";\r\n\r\nimport PackageAllPage from \"./Package/PackageAllPage\";\r\nimport PackageAddPage from \"./Package/PackageAddPage\";\r\n\r\nimport WorkersAddPage from \"./Workers/WorkersAddPage\";\r\nimport WorkersAllPage from \"./Workers/WorkersAllPage\";\r\n\r\nimport Electricity from \"./Electricity/Electricity\";\r\n\r\nimport RazGrupasAddPage from \"./Workers/RazGrupasAddPage\";\r\nimport AlcoholTax from \"./AlcoholTax/AlcoholTax\";\r\n\r\nimport WarningDelete from \"./WarningDelete\";\r\nimport FileСhoice from \"./FileСhoice\";\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // useParams,\r\n  // Link\r\n} from \"react-router-dom\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n\r\nReactDOM.render(\r\n  <>\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <MainPage />\r\n          {/* <FileСhoice /> */}\r\n        </Route>\r\n        <Route exact path=\"/file\">\r\n          <FileСhoice />\r\n        </Route>\r\n        <Route exact path=\"/product-*\">\r\n          <ScrollToTop />\r\n          <ProductRouting />\r\n        </Route>\r\n        <Route exact path=\"/group-*\">\r\n          <ScrollToTop />\r\n          <GroupRouting />\r\n        </Route>\r\n        <Route\r\n          exact\r\n          path=\"/expenses-add-window/:destinationEntryNameTemp/:infoTemp\"\r\n        >\r\n          {/* <AddRawMaterialToProductPage /> */}\r\n          <AddExpensesPage />\r\n        </Route>\r\n        <Route exact path=\"/raw-material-*\">\r\n          <ScrollToTop />\r\n          <RawMaterialRouting />\r\n        </Route>\r\n        <Route exact path=\"/fixed-cost-all\">\r\n          <ScrollToTop />\r\n          <FixedCostAllPage />\r\n        </Route>\r\n        <Route exact path=\"/fixed-cost-all-add\">\r\n          <ScrollToTop />\r\n          <FixedCostAllAddPage />\r\n        </Route>\r\n        <Route exact path=\"/package-all\">\r\n          <ScrollToTop />\r\n          <PackageAllPage />\r\n        </Route>\r\n        <Route exact path=\"/package-add\">\r\n          <PackageAddPage />\r\n        </Route>\r\n        <Route exact path=\"/workers-add\">\r\n          <WorkersAddPage />\r\n        </Route>\r\n        <Route exact path=\"/workers-all\">\r\n          <ScrollToTop />\r\n          <WorkersAllPage />\r\n        </Route>\r\n        <Route exact path=\"/raz-grupas-add/:productName/:type\">\r\n          <RazGrupasAddPage />\r\n        </Route>\r\n        <Route exact path=\"/electricity\">\r\n          <ScrollToTop />\r\n          <Electricity />\r\n        </Route>\r\n        <Route exact path=\"/alcohol-tax\">\r\n          <AlcoholTax />\r\n        </Route>\r\n        <Route exact path=\"/warning-delete\">\r\n          <WarningDelete />\r\n        </Route>\r\n        <Route>\r\n          <NoMatch />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nfunction NoMatch() {\r\n  return <h1>404 Error</h1>;\r\n}\r\n\r\nfunction ProductRouting() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/product-:kods\">\r\n          <ProductPage />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction RawMaterialRouting() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/raw-material-all\">\r\n          <RawMaterialAllPage />\r\n        </Route>\r\n        <Route exact path=\"/raw-material-group\">\r\n          <RawMaterialAllPage />\r\n        </Route>\r\n        <Route exact path=\"/raw-material-add\">\r\n          <RawMaterialAddPage />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction GroupRouting() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/group-:groupName\">\r\n          <GroupPage />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}